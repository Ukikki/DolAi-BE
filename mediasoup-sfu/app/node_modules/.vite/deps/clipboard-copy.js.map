{
  "version": 3,
  "sources": ["../../clipboard-copy/index.js"],
  "sourcesContent": ["/* global DOMException */\n\nmodule.exports = clipboardCopy\n\nfunction clipboardCopy (text) {\n  // Use the Async Clipboard API when available. Requires a secure browing\n  // context (i.e. HTTPS)\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(text).catch(function (err) {\n      throw (err !== undefined ? err : new DOMException('The request is not allowed', 'NotAllowedError'))\n    })\n  }\n\n  // ...Otherwise, use document.execCommand() fallback\n\n  // Put the text to copy into a <span>\n  var span = document.createElement('span')\n  span.textContent = text\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre'\n\n  // Add the <span> to the page\n  document.body.appendChild(span)\n\n  // Make a selection object representing the range of text selected by the user\n  var selection = window.getSelection()\n  var range = window.document.createRange()\n  selection.removeAllRanges()\n  range.selectNode(span)\n  selection.addRange(range)\n\n  // Copy text to the clipboard\n  var success = false\n  try {\n    success = window.document.execCommand('copy')\n  } catch (err) {\n    console.log('error', err)\n  }\n\n  // Cleanup\n  selection.removeAllRanges()\n  window.document.body.removeChild(span)\n\n  return success\n    ? Promise.resolve()\n    : Promise.reject(new DOMException('The request is not allowed', 'NotAllowedError'))\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AAEjB,aAAS,cAAe,MAAM;AAG5B,UAAI,UAAU,WAAW;AACvB,eAAO,UAAU,UAAU,UAAU,IAAI,EAAE,MAAM,SAAU,KAAK;AAC9D,gBAAO,QAAQ,SAAY,MAAM,IAAI,aAAa,8BAA8B,iBAAiB;AAAA,QACnG,CAAC;AAAA,MACH;AAKA,UAAI,OAAO,SAAS,cAAc,MAAM;AACxC,WAAK,cAAc;AAGnB,WAAK,MAAM,aAAa;AAGxB,eAAS,KAAK,YAAY,IAAI;AAG9B,UAAI,YAAY,OAAO,aAAa;AACpC,UAAI,QAAQ,OAAO,SAAS,YAAY;AACxC,gBAAU,gBAAgB;AAC1B,YAAM,WAAW,IAAI;AACrB,gBAAU,SAAS,KAAK;AAGxB,UAAI,UAAU;AACd,UAAI;AACF,kBAAU,OAAO,SAAS,YAAY,MAAM;AAAA,MAC9C,SAAS,KAAK;AACZ,gBAAQ,IAAI,SAAS,GAAG;AAAA,MAC1B;AAGA,gBAAU,gBAAgB;AAC1B,aAAO,SAAS,KAAK,YAAY,IAAI;AAErC,aAAO,UACH,QAAQ,QAAQ,IAChB,QAAQ,OAAO,IAAI,aAAa,8BAA8B,iBAAiB,CAAC;AAAA,IACtF;AAAA;AAAA;",
  "names": []
}
