import {
  __commonJS
} from "./chunk-JVWSFFO4.js";

// node_modules/event-target-shim/index.js
var require_event_target_shim = __commonJS({
  "node_modules/event-target-shim/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function assertType(condition, message, ...args) {
      if (!condition) {
        throw new TypeError(format(message, args));
      }
    }
    function format(message, args) {
      let i = 0;
      return message.replace(/%[os]/gu, () => anyToString(args[i++]));
    }
    function anyToString(x) {
      if (typeof x !== "object" || x === null) {
        return String(x);
      }
      return Object.prototype.toString.call(x);
    }
    var currentErrorHandler;
    function setErrorHandler(value) {
      assertType(typeof value === "function" || value === void 0, "The error handler must be a function or undefined, but got %o.", value);
      currentErrorHandler = value;
    }
    function reportError(maybeError) {
      try {
        const error = maybeError instanceof Error ? maybeError : new Error(anyToString(maybeError));
        if (currentErrorHandler) {
          currentErrorHandler(error);
          return;
        }
        if (typeof dispatchEvent === "function" && typeof ErrorEvent === "function") {
          dispatchEvent(new ErrorEvent("error", { error, message: error.message }));
        } else if (typeof process !== "undefined" && typeof process.emit === "function") {
          process.emit("uncaughtException", error);
          return;
        }
        console.error(error);
      } catch (_a) {
      }
    }
    var Global = typeof window !== "undefined" ? window : typeof self !== "undefined" ? self : typeof global !== "undefined" ? global : typeof globalThis !== "undefined" ? globalThis : void 0;
    var currentWarnHandler;
    function setWarningHandler(value) {
      assertType(typeof value === "function" || value === void 0, "The warning handler must be a function or undefined, but got %o.", value);
      currentWarnHandler = value;
    }
    var Warning = class {
      constructor(code, message) {
        this.code = code;
        this.message = message;
      }
      /**
       * Report this warning.
       * @param args The arguments of the warning.
       */
      warn(...args) {
        var _a;
        try {
          if (currentWarnHandler) {
            currentWarnHandler({ ...this, args });
            return;
          }
          const stack = ((_a = new Error().stack) !== null && _a !== void 0 ? _a : "").replace(/^(?:.+?\n){2}/gu, "\n");
          console.warn(this.message, ...args, stack);
        } catch (_b) {
        }
      }
    };
    var InitEventWasCalledWhileDispatching = new Warning("W01", "Unable to initialize event under dispatching.");
    var FalsyWasAssignedToCancelBubble = new Warning("W02", "Assigning any falsy value to 'cancelBubble' property has no effect.");
    var TruthyWasAssignedToReturnValue = new Warning("W03", "Assigning any truthy value to 'returnValue' property has no effect.");
    var NonCancelableEventWasCanceled = new Warning("W04", "Unable to preventDefault on non-cancelable events.");
    var CanceledInPassiveListener = new Warning("W05", "Unable to preventDefault inside passive event listener invocation.");
    var EventListenerWasDuplicated = new Warning("W06", "An event listener wasn't added because it has been added already: %o, %o");
    var OptionWasIgnored = new Warning("W07", "The %o option value was abandoned because the event listener wasn't added as duplicated.");
    var InvalidEventListener = new Warning("W08", "The 'callback' argument must be a function or an object that has 'handleEvent' method: %o");
    var InvalidAttributeHandler = new Warning("W09", "Event attribute handler must be a function: %o");
    var Event = class {
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-none
       */
      static get NONE() {
        return NONE;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-capturing_phase
       */
      static get CAPTURING_PHASE() {
        return CAPTURING_PHASE;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-at_target
       */
      static get AT_TARGET() {
        return AT_TARGET;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-bubbling_phase
       */
      static get BUBBLING_PHASE() {
        return BUBBLING_PHASE;
      }
      /**
       * Initialize this event instance.
       * @param type The type of this event.
       * @param eventInitDict Options to initialize.
       * @see https://dom.spec.whatwg.org/#dom-event-event
       */
      constructor(type, eventInitDict) {
        Object.defineProperty(this, "isTrusted", {
          value: false,
          enumerable: true
        });
        const opts = eventInitDict !== null && eventInitDict !== void 0 ? eventInitDict : {};
        internalDataMap.set(this, {
          type: String(type),
          bubbles: Boolean(opts.bubbles),
          cancelable: Boolean(opts.cancelable),
          composed: Boolean(opts.composed),
          target: null,
          currentTarget: null,
          stopPropagationFlag: false,
          stopImmediatePropagationFlag: false,
          canceledFlag: false,
          inPassiveListenerFlag: false,
          dispatchFlag: false,
          timeStamp: Date.now()
        });
      }
      /**
       * The type of this event.
       * @see https://dom.spec.whatwg.org/#dom-event-type
       */
      get type() {
        return $(this).type;
      }
      /**
       * The event target of the current dispatching.
       * @see https://dom.spec.whatwg.org/#dom-event-target
       */
      get target() {
        return $(this).target;
      }
      /**
       * The event target of the current dispatching.
       * @deprecated Use the `target` property instead.
       * @see https://dom.spec.whatwg.org/#dom-event-srcelement
       */
      get srcElement() {
        return $(this).target;
      }
      /**
       * The event target of the current dispatching.
       * @see https://dom.spec.whatwg.org/#dom-event-currenttarget
       */
      get currentTarget() {
        return $(this).currentTarget;
      }
      /**
       * The event target of the current dispatching.
       * This doesn't support node tree.
       * @see https://dom.spec.whatwg.org/#dom-event-composedpath
       */
      composedPath() {
        const currentTarget = $(this).currentTarget;
        if (currentTarget) {
          return [currentTarget];
        }
        return [];
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-none
       */
      get NONE() {
        return NONE;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-capturing_phase
       */
      get CAPTURING_PHASE() {
        return CAPTURING_PHASE;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-at_target
       */
      get AT_TARGET() {
        return AT_TARGET;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-bubbling_phase
       */
      get BUBBLING_PHASE() {
        return BUBBLING_PHASE;
      }
      /**
       * The current event phase.
       * @see https://dom.spec.whatwg.org/#dom-event-eventphase
       */
      get eventPhase() {
        return $(this).dispatchFlag ? 2 : 0;
      }
      /**
       * Stop event bubbling.
       * Because this shim doesn't support node tree, this merely changes the `cancelBubble` property value.
       * @see https://dom.spec.whatwg.org/#dom-event-stoppropagation
       */
      stopPropagation() {
        $(this).stopPropagationFlag = true;
      }
      /**
       * `true` if event bubbling was stopped.
       * @deprecated
       * @see https://dom.spec.whatwg.org/#dom-event-cancelbubble
       */
      get cancelBubble() {
        return $(this).stopPropagationFlag;
      }
      /**
       * Stop event bubbling if `true` is set.
       * @deprecated Use the `stopPropagation()` method instead.
       * @see https://dom.spec.whatwg.org/#dom-event-cancelbubble
       */
      set cancelBubble(value) {
        if (value) {
          $(this).stopPropagationFlag = true;
        } else {
          FalsyWasAssignedToCancelBubble.warn();
        }
      }
      /**
       * Stop event bubbling and subsequent event listener callings.
       * @see https://dom.spec.whatwg.org/#dom-event-stopimmediatepropagation
       */
      stopImmediatePropagation() {
        const data = $(this);
        data.stopPropagationFlag = data.stopImmediatePropagationFlag = true;
      }
      /**
       * `true` if this event will bubble.
       * @see https://dom.spec.whatwg.org/#dom-event-bubbles
       */
      get bubbles() {
        return $(this).bubbles;
      }
      /**
       * `true` if this event can be canceled by the `preventDefault()` method.
       * @see https://dom.spec.whatwg.org/#dom-event-cancelable
       */
      get cancelable() {
        return $(this).cancelable;
      }
      /**
       * `true` if the default behavior will act.
       * @deprecated Use the `defaultPrevented` proeprty instead.
       * @see https://dom.spec.whatwg.org/#dom-event-returnvalue
       */
      get returnValue() {
        return !$(this).canceledFlag;
      }
      /**
       * Cancel the default behavior if `false` is set.
       * @deprecated Use the `preventDefault()` method instead.
       * @see https://dom.spec.whatwg.org/#dom-event-returnvalue
       */
      set returnValue(value) {
        if (!value) {
          setCancelFlag($(this));
        } else {
          TruthyWasAssignedToReturnValue.warn();
        }
      }
      /**
       * Cancel the default behavior.
       * @see https://dom.spec.whatwg.org/#dom-event-preventdefault
       */
      preventDefault() {
        setCancelFlag($(this));
      }
      /**
       * `true` if the default behavior was canceled.
       * @see https://dom.spec.whatwg.org/#dom-event-defaultprevented
       */
      get defaultPrevented() {
        return $(this).canceledFlag;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-composed
       */
      get composed() {
        return $(this).composed;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-istrusted
       */
      //istanbul ignore next
      get isTrusted() {
        return false;
      }
      /**
       * @see https://dom.spec.whatwg.org/#dom-event-timestamp
       */
      get timeStamp() {
        return $(this).timeStamp;
      }
      /**
       * @deprecated Don't use this method. The constructor did initialization.
       */
      initEvent(type, bubbles = false, cancelable = false) {
        const data = $(this);
        if (data.dispatchFlag) {
          InitEventWasCalledWhileDispatching.warn();
          return;
        }
        internalDataMap.set(this, {
          ...data,
          type: String(type),
          bubbles: Boolean(bubbles),
          cancelable: Boolean(cancelable),
          target: null,
          currentTarget: null,
          stopPropagationFlag: false,
          stopImmediatePropagationFlag: false,
          canceledFlag: false
        });
      }
    };
    var NONE = 0;
    var CAPTURING_PHASE = 1;
    var AT_TARGET = 2;
    var BUBBLING_PHASE = 3;
    var internalDataMap = /* @__PURE__ */ new WeakMap();
    function $(event, name = "this") {
      const retv = internalDataMap.get(event);
      assertType(retv != null, "'%s' must be an object that Event constructor created, but got another one: %o", name, event);
      return retv;
    }
    function setCancelFlag(data) {
      if (data.inPassiveListenerFlag) {
        CanceledInPassiveListener.warn();
        return;
      }
      if (!data.cancelable) {
        NonCancelableEventWasCanceled.warn();
        return;
      }
      data.canceledFlag = true;
    }
    Object.defineProperty(Event, "NONE", { enumerable: true });
    Object.defineProperty(Event, "CAPTURING_PHASE", { enumerable: true });
    Object.defineProperty(Event, "AT_TARGET", { enumerable: true });
    Object.defineProperty(Event, "BUBBLING_PHASE", { enumerable: true });
    var keys = Object.getOwnPropertyNames(Event.prototype);
    for (let i = 0; i < keys.length; ++i) {
      if (keys[i] === "constructor") {
        continue;
      }
      Object.defineProperty(Event.prototype, keys[i], { enumerable: true });
    }
    if (typeof Global !== "undefined" && typeof Global.Event !== "undefined") {
      Object.setPrototypeOf(Event.prototype, Global.Event.prototype);
    }
    function createInvalidStateError(message) {
      if (Global.DOMException) {
        return new Global.DOMException(message, "InvalidStateError");
      }
      if (DOMException == null) {
        DOMException = class DOMException2 extends Error {
          constructor(msg) {
            super(msg);
            if (Error.captureStackTrace) {
              Error.captureStackTrace(this, DOMException2);
            }
          }
          // eslint-disable-next-line class-methods-use-this
          get code() {
            return 11;
          }
          // eslint-disable-next-line class-methods-use-this
          get name() {
            return "InvalidStateError";
          }
        };
        Object.defineProperties(DOMException.prototype, {
          code: { enumerable: true },
          name: { enumerable: true }
        });
        defineErrorCodeProperties(DOMException);
        defineErrorCodeProperties(DOMException.prototype);
      }
      return new DOMException(message);
    }
    var DOMException;
    var ErrorCodeMap = {
      INDEX_SIZE_ERR: 1,
      DOMSTRING_SIZE_ERR: 2,
      HIERARCHY_REQUEST_ERR: 3,
      WRONG_DOCUMENT_ERR: 4,
      INVALID_CHARACTER_ERR: 5,
      NO_DATA_ALLOWED_ERR: 6,
      NO_MODIFICATION_ALLOWED_ERR: 7,
      NOT_FOUND_ERR: 8,
      NOT_SUPPORTED_ERR: 9,
      INUSE_ATTRIBUTE_ERR: 10,
      INVALID_STATE_ERR: 11,
      SYNTAX_ERR: 12,
      INVALID_MODIFICATION_ERR: 13,
      NAMESPACE_ERR: 14,
      INVALID_ACCESS_ERR: 15,
      VALIDATION_ERR: 16,
      TYPE_MISMATCH_ERR: 17,
      SECURITY_ERR: 18,
      NETWORK_ERR: 19,
      ABORT_ERR: 20,
      URL_MISMATCH_ERR: 21,
      QUOTA_EXCEEDED_ERR: 22,
      TIMEOUT_ERR: 23,
      INVALID_NODE_TYPE_ERR: 24,
      DATA_CLONE_ERR: 25
    };
    function defineErrorCodeProperties(obj) {
      const keys2 = Object.keys(ErrorCodeMap);
      for (let i = 0; i < keys2.length; ++i) {
        const key = keys2[i];
        const value = ErrorCodeMap[key];
        Object.defineProperty(obj, key, {
          get() {
            return value;
          },
          configurable: true,
          enumerable: true
        });
      }
    }
    var EventWrapper = class extends Event {
      /**
       * Wrap a given event object to control states.
       * @param event The event-like object to wrap.
       */
      static wrap(event) {
        return new (getWrapperClassOf(event))(event);
      }
      constructor(event) {
        super(event.type, {
          bubbles: event.bubbles,
          cancelable: event.cancelable,
          composed: event.composed
        });
        if (event.cancelBubble) {
          super.stopPropagation();
        }
        if (event.defaultPrevented) {
          super.preventDefault();
        }
        internalDataMap$1.set(this, { original: event });
        const keys2 = Object.keys(event);
        for (let i = 0; i < keys2.length; ++i) {
          const key = keys2[i];
          if (!(key in this)) {
            Object.defineProperty(this, key, defineRedirectDescriptor(event, key));
          }
        }
      }
      stopPropagation() {
        super.stopPropagation();
        const { original } = $$1(this);
        if ("stopPropagation" in original) {
          original.stopPropagation();
        }
      }
      get cancelBubble() {
        return super.cancelBubble;
      }
      set cancelBubble(value) {
        super.cancelBubble = value;
        const { original } = $$1(this);
        if ("cancelBubble" in original) {
          original.cancelBubble = value;
        }
      }
      stopImmediatePropagation() {
        super.stopImmediatePropagation();
        const { original } = $$1(this);
        if ("stopImmediatePropagation" in original) {
          original.stopImmediatePropagation();
        }
      }
      get returnValue() {
        return super.returnValue;
      }
      set returnValue(value) {
        super.returnValue = value;
        const { original } = $$1(this);
        if ("returnValue" in original) {
          original.returnValue = value;
        }
      }
      preventDefault() {
        super.preventDefault();
        const { original } = $$1(this);
        if ("preventDefault" in original) {
          original.preventDefault();
        }
      }
      get timeStamp() {
        const { original } = $$1(this);
        if ("timeStamp" in original) {
          return original.timeStamp;
        }
        return super.timeStamp;
      }
    };
    var internalDataMap$1 = /* @__PURE__ */ new WeakMap();
    function $$1(event) {
      const retv = internalDataMap$1.get(event);
      assertType(retv != null, "'this' is expected an Event object, but got", event);
      return retv;
    }
    var wrapperClassCache = /* @__PURE__ */ new WeakMap();
    wrapperClassCache.set(Object.prototype, EventWrapper);
    if (typeof Global !== "undefined" && typeof Global.Event !== "undefined") {
      wrapperClassCache.set(Global.Event.prototype, EventWrapper);
    }
    function getWrapperClassOf(originalEvent) {
      const prototype = Object.getPrototypeOf(originalEvent);
      if (prototype == null) {
        return EventWrapper;
      }
      let wrapper = wrapperClassCache.get(prototype);
      if (wrapper == null) {
        wrapper = defineWrapper(getWrapperClassOf(prototype), prototype);
        wrapperClassCache.set(prototype, wrapper);
      }
      return wrapper;
    }
    function defineWrapper(BaseEventWrapper, originalPrototype) {
      class CustomEventWrapper extends BaseEventWrapper {
      }
      const keys2 = Object.keys(originalPrototype);
      for (let i = 0; i < keys2.length; ++i) {
        Object.defineProperty(CustomEventWrapper.prototype, keys2[i], defineRedirectDescriptor(originalPrototype, keys2[i]));
      }
      return CustomEventWrapper;
    }
    function defineRedirectDescriptor(obj, key) {
      const d = Object.getOwnPropertyDescriptor(obj, key);
      return {
        get() {
          const original = $$1(this).original;
          const value = original[key];
          if (typeof value === "function") {
            return value.bind(original);
          }
          return value;
        },
        set(value) {
          const original = $$1(this).original;
          original[key] = value;
        },
        configurable: d.configurable,
        enumerable: d.enumerable
      };
    }
    function createListener(callback, capture, passive, once, signal, signalListener) {
      return {
        callback,
        flags: (capture ? 1 : 0) | (passive ? 2 : 0) | (once ? 4 : 0),
        signal,
        signalListener
      };
    }
    function setRemoved(listener) {
      listener.flags |= 8;
    }
    function isCapture(listener) {
      return (listener.flags & 1) === 1;
    }
    function isPassive(listener) {
      return (listener.flags & 2) === 2;
    }
    function isOnce(listener) {
      return (listener.flags & 4) === 4;
    }
    function isRemoved(listener) {
      return (listener.flags & 8) === 8;
    }
    function invokeCallback({ callback }, target, event) {
      try {
        if (typeof callback === "function") {
          callback.call(target, event);
        } else if (typeof callback.handleEvent === "function") {
          callback.handleEvent(event);
        }
      } catch (thrownError) {
        reportError(thrownError);
      }
    }
    function findIndexOfListener({ listeners }, callback, capture) {
      for (let i = 0; i < listeners.length; ++i) {
        if (listeners[i].callback === callback && isCapture(listeners[i]) === capture) {
          return i;
        }
      }
      return -1;
    }
    function addListener(list, callback, capture, passive, once, signal) {
      let signalListener;
      if (signal) {
        signalListener = removeListener.bind(null, list, callback, capture);
        signal.addEventListener("abort", signalListener);
      }
      const listener = createListener(callback, capture, passive, once, signal, signalListener);
      if (list.cow) {
        list.cow = false;
        list.listeners = [...list.listeners, listener];
      } else {
        list.listeners.push(listener);
      }
      return listener;
    }
    function removeListener(list, callback, capture) {
      const index = findIndexOfListener(list, callback, capture);
      if (index !== -1) {
        return removeListenerAt(list, index);
      }
      return false;
    }
    function removeListenerAt(list, index, disableCow = false) {
      const listener = list.listeners[index];
      setRemoved(listener);
      if (listener.signal) {
        listener.signal.removeEventListener("abort", listener.signalListener);
      }
      if (list.cow && !disableCow) {
        list.cow = false;
        list.listeners = list.listeners.filter((_, i) => i !== index);
        return false;
      }
      list.listeners.splice(index, 1);
      return true;
    }
    function createListenerListMap() {
      return /* @__PURE__ */ Object.create(null);
    }
    function ensureListenerList(listenerMap, type) {
      var _a;
      return (_a = listenerMap[type]) !== null && _a !== void 0 ? _a : listenerMap[type] = {
        attrCallback: void 0,
        attrListener: void 0,
        cow: false,
        listeners: []
      };
    }
    var EventTarget = class {
      /**
       * Initialize this instance.
       */
      constructor() {
        internalDataMap$2.set(this, createListenerListMap());
      }
      // Implementation
      addEventListener(type0, callback0, options0) {
        const listenerMap = $$2(this);
        const { callback, capture, once, passive, signal, type } = normalizeAddOptions(type0, callback0, options0);
        if (callback == null || (signal === null || signal === void 0 ? void 0 : signal.aborted)) {
          return;
        }
        const list = ensureListenerList(listenerMap, type);
        const i = findIndexOfListener(list, callback, capture);
        if (i !== -1) {
          warnDuplicate(list.listeners[i], passive, once, signal);
          return;
        }
        addListener(list, callback, capture, passive, once, signal);
      }
      // Implementation
      removeEventListener(type0, callback0, options0) {
        const listenerMap = $$2(this);
        const { callback, capture, type } = normalizeOptions(type0, callback0, options0);
        const list = listenerMap[type];
        if (callback != null && list) {
          removeListener(list, callback, capture);
        }
      }
      // Implementation
      dispatchEvent(e) {
        const list = $$2(this)[String(e.type)];
        if (list == null) {
          return true;
        }
        const event = e instanceof Event ? e : EventWrapper.wrap(e);
        const eventData = $(event, "event");
        if (eventData.dispatchFlag) {
          throw createInvalidStateError("This event has been in dispatching.");
        }
        eventData.dispatchFlag = true;
        eventData.target = eventData.currentTarget = this;
        if (!eventData.stopPropagationFlag) {
          const { cow, listeners } = list;
          list.cow = true;
          for (let i = 0; i < listeners.length; ++i) {
            const listener = listeners[i];
            if (isRemoved(listener)) {
              continue;
            }
            if (isOnce(listener) && removeListenerAt(list, i, !cow)) {
              i -= 1;
            }
            eventData.inPassiveListenerFlag = isPassive(listener);
            invokeCallback(listener, this, event);
            eventData.inPassiveListenerFlag = false;
            if (eventData.stopImmediatePropagationFlag) {
              break;
            }
          }
          if (!cow) {
            list.cow = false;
          }
        }
        eventData.target = null;
        eventData.currentTarget = null;
        eventData.stopImmediatePropagationFlag = false;
        eventData.stopPropagationFlag = false;
        eventData.dispatchFlag = false;
        return !eventData.canceledFlag;
      }
    };
    var internalDataMap$2 = /* @__PURE__ */ new WeakMap();
    function $$2(target, name = "this") {
      const retv = internalDataMap$2.get(target);
      assertType(retv != null, "'%s' must be an object that EventTarget constructor created, but got another one: %o", name, target);
      return retv;
    }
    function normalizeAddOptions(type, callback, options) {
      var _a;
      assertCallback(callback);
      if (typeof options === "object" && options !== null) {
        return {
          type: String(type),
          callback: callback !== null && callback !== void 0 ? callback : void 0,
          capture: Boolean(options.capture),
          passive: Boolean(options.passive),
          once: Boolean(options.once),
          signal: (_a = options.signal) !== null && _a !== void 0 ? _a : void 0
        };
      }
      return {
        type: String(type),
        callback: callback !== null && callback !== void 0 ? callback : void 0,
        capture: Boolean(options),
        passive: false,
        once: false,
        signal: void 0
      };
    }
    function normalizeOptions(type, callback, options) {
      assertCallback(callback);
      if (typeof options === "object" && options !== null) {
        return {
          type: String(type),
          callback: callback !== null && callback !== void 0 ? callback : void 0,
          capture: Boolean(options.capture)
        };
      }
      return {
        type: String(type),
        callback: callback !== null && callback !== void 0 ? callback : void 0,
        capture: Boolean(options)
      };
    }
    function assertCallback(callback) {
      if (typeof callback === "function" || typeof callback === "object" && callback !== null && typeof callback.handleEvent === "function") {
        return;
      }
      if (callback == null || typeof callback === "object") {
        InvalidEventListener.warn(callback);
        return;
      }
      throw new TypeError(format(InvalidEventListener.message, [callback]));
    }
    function warnDuplicate(listener, passive, once, signal) {
      EventListenerWasDuplicated.warn(isCapture(listener) ? "capture" : "bubble", listener.callback);
      if (isPassive(listener) !== passive) {
        OptionWasIgnored.warn("passive");
      }
      if (isOnce(listener) !== once) {
        OptionWasIgnored.warn("once");
      }
      if (listener.signal !== signal) {
        OptionWasIgnored.warn("signal");
      }
    }
    var keys$1 = Object.getOwnPropertyNames(EventTarget.prototype);
    for (let i = 0; i < keys$1.length; ++i) {
      if (keys$1[i] === "constructor") {
        continue;
      }
      Object.defineProperty(EventTarget.prototype, keys$1[i], { enumerable: true });
    }
    if (typeof Global !== "undefined" && typeof Global.EventTarget !== "undefined") {
      Object.setPrototypeOf(EventTarget.prototype, Global.EventTarget.prototype);
    }
    function getEventAttributeValue(target, type) {
      var _a, _b;
      const listMap = $$2(target, "target");
      return (_b = (_a = listMap[type]) === null || _a === void 0 ? void 0 : _a.attrCallback) !== null && _b !== void 0 ? _b : null;
    }
    function setEventAttributeValue(target, type, callback) {
      if (callback != null && typeof callback !== "function") {
        InvalidAttributeHandler.warn(callback);
      }
      if (typeof callback === "function" || typeof callback === "object" && callback !== null) {
        upsertEventAttributeListener(target, type, callback);
      } else {
        removeEventAttributeListener(target, type);
      }
    }
    function upsertEventAttributeListener(target, type, callback) {
      const list = ensureListenerList($$2(target, "target"), String(type));
      list.attrCallback = callback;
      if (list.attrListener == null) {
        list.attrListener = addListener(list, defineEventAttributeCallback(list), false, false, false, void 0);
      }
    }
    function removeEventAttributeListener(target, type) {
      const listMap = $$2(target, "target");
      const list = listMap[String(type)];
      if (list && list.attrListener) {
        removeListener(list, list.attrListener.callback, false);
        list.attrCallback = list.attrListener = void 0;
      }
    }
    function defineEventAttributeCallback(list) {
      return function(event) {
        const callback = list.attrCallback;
        if (typeof callback === "function") {
          callback.call(this, event);
        }
      };
    }
    function defineCustomEventTarget(...types) {
      class CustomEventTarget extends EventTarget {
      }
      for (let i = 0; i < types.length; ++i) {
        defineEventAttribute(CustomEventTarget.prototype, types[i]);
      }
      return CustomEventTarget;
    }
    function defineEventAttribute(target, type, _eventClass) {
      Object.defineProperty(target, `on${type}`, {
        get() {
          return getEventAttributeValue(this, type);
        },
        set(value) {
          setEventAttributeValue(this, type, value);
        },
        configurable: true,
        enumerable: true
      });
    }
    exports.Event = Event;
    exports.EventTarget = EventTarget;
    exports.default = EventTarget;
    exports.defineCustomEventTarget = defineCustomEventTarget;
    exports.defineEventAttribute = defineEventAttribute;
    exports.getEventAttributeValue = getEventAttributeValue;
    exports.setErrorHandler = setErrorHandler;
    exports.setEventAttributeValue = setEventAttributeValue;
    exports.setWarningHandler = setWarningHandler;
  }
});

// node_modules/uuid/dist/commonjs-browser/rng.js
var require_rng = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/rng.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = rng;
    var getRandomValues;
    var rnds8 = new Uint8Array(16);
    function rng() {
      if (!getRandomValues) {
        getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);
        if (!getRandomValues) {
          throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        }
      }
      return getRandomValues(rnds8);
    }
  }
});

// node_modules/uuid/dist/commonjs-browser/regex.js
var require_regex = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/regex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/validate.js
var require_validate = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/validate.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _regex = _interopRequireDefault(require_regex());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function validate(uuid) {
      return typeof uuid === "string" && _regex.default.test(uuid);
    }
    var _default = validate;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/stringify.js
var require_stringify = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/stringify.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    exports.unsafeStringify = unsafeStringify;
    var _validate = _interopRequireDefault(require_validate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var byteToHex = [];
    for (let i = 0; i < 256; ++i) {
      byteToHex.push((i + 256).toString(16).slice(1));
    }
    function unsafeStringify(arr, offset = 0) {
      return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];
    }
    function stringify(arr, offset = 0) {
      const uuid = unsafeStringify(arr, offset);
      if (!(0, _validate.default)(uuid)) {
        throw TypeError("Stringified UUID is invalid");
      }
      return uuid;
    }
    var _default = stringify;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/v1.js
var require_v1 = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/v1.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rng = _interopRequireDefault(require_rng());
    var _stringify = require_stringify();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _nodeId;
    var _clockseq;
    var _lastMSecs = 0;
    var _lastNSecs = 0;
    function v1(options, buf, offset) {
      let i = buf && offset || 0;
      const b = buf || new Array(16);
      options = options || {};
      let node = options.node || _nodeId;
      let clockseq = options.clockseq !== void 0 ? options.clockseq : _clockseq;
      if (node == null || clockseq == null) {
        const seedBytes = options.random || (options.rng || _rng.default)();
        if (node == null) {
          node = _nodeId = [seedBytes[0] | 1, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
        }
        if (clockseq == null) {
          clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 16383;
        }
      }
      let msecs = options.msecs !== void 0 ? options.msecs : Date.now();
      let nsecs = options.nsecs !== void 0 ? options.nsecs : _lastNSecs + 1;
      const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;
      if (dt < 0 && options.clockseq === void 0) {
        clockseq = clockseq + 1 & 16383;
      }
      if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === void 0) {
        nsecs = 0;
      }
      if (nsecs >= 1e4) {
        throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
      }
      _lastMSecs = msecs;
      _lastNSecs = nsecs;
      _clockseq = clockseq;
      msecs += 122192928e5;
      const tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;
      b[i++] = tl >>> 24 & 255;
      b[i++] = tl >>> 16 & 255;
      b[i++] = tl >>> 8 & 255;
      b[i++] = tl & 255;
      const tmh = msecs / 4294967296 * 1e4 & 268435455;
      b[i++] = tmh >>> 8 & 255;
      b[i++] = tmh & 255;
      b[i++] = tmh >>> 24 & 15 | 16;
      b[i++] = tmh >>> 16 & 255;
      b[i++] = clockseq >>> 8 | 128;
      b[i++] = clockseq & 255;
      for (let n = 0; n < 6; ++n) {
        b[i + n] = node[n];
      }
      return buf || (0, _stringify.unsafeStringify)(b);
    }
    var _default = v1;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/parse.js
var require_parse = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/parse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _validate = _interopRequireDefault(require_validate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function parse(uuid) {
      if (!(0, _validate.default)(uuid)) {
        throw TypeError("Invalid UUID");
      }
      let v;
      const arr = new Uint8Array(16);
      arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
      arr[1] = v >>> 16 & 255;
      arr[2] = v >>> 8 & 255;
      arr[3] = v & 255;
      arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
      arr[5] = v & 255;
      arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
      arr[7] = v & 255;
      arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
      arr[9] = v & 255;
      arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;
      arr[11] = v / 4294967296 & 255;
      arr[12] = v >>> 24 & 255;
      arr[13] = v >>> 16 & 255;
      arr[14] = v >>> 8 & 255;
      arr[15] = v & 255;
      return arr;
    }
    var _default = parse;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/v35.js
var require_v35 = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/v35.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.URL = exports.DNS = void 0;
    exports.default = v35;
    var _stringify = require_stringify();
    var _parse = _interopRequireDefault(require_parse());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function stringToBytes(str) {
      str = unescape(encodeURIComponent(str));
      const bytes = [];
      for (let i = 0; i < str.length; ++i) {
        bytes.push(str.charCodeAt(i));
      }
      return bytes;
    }
    var DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
    exports.DNS = DNS;
    var URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
    exports.URL = URL;
    function v35(name, version, hashfunc) {
      function generateUUID(value, namespace, buf, offset) {
        var _namespace;
        if (typeof value === "string") {
          value = stringToBytes(value);
        }
        if (typeof namespace === "string") {
          namespace = (0, _parse.default)(namespace);
        }
        if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {
          throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
        }
        let bytes = new Uint8Array(16 + value.length);
        bytes.set(namespace);
        bytes.set(value, namespace.length);
        bytes = hashfunc(bytes);
        bytes[6] = bytes[6] & 15 | version;
        bytes[8] = bytes[8] & 63 | 128;
        if (buf) {
          offset = offset || 0;
          for (let i = 0; i < 16; ++i) {
            buf[offset + i] = bytes[i];
          }
          return buf;
        }
        return (0, _stringify.unsafeStringify)(bytes);
      }
      try {
        generateUUID.name = name;
      } catch (err) {
      }
      generateUUID.DNS = DNS;
      generateUUID.URL = URL;
      return generateUUID;
    }
  }
});

// node_modules/uuid/dist/commonjs-browser/md5.js
var require_md5 = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/md5.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    function md5(bytes) {
      if (typeof bytes === "string") {
        const msg = unescape(encodeURIComponent(bytes));
        bytes = new Uint8Array(msg.length);
        for (let i = 0; i < msg.length; ++i) {
          bytes[i] = msg.charCodeAt(i);
        }
      }
      return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
    }
    function md5ToHexEncodedArray(input) {
      const output = [];
      const length32 = input.length * 32;
      const hexTab = "0123456789abcdef";
      for (let i = 0; i < length32; i += 8) {
        const x = input[i >> 5] >>> i % 32 & 255;
        const hex = parseInt(hexTab.charAt(x >>> 4 & 15) + hexTab.charAt(x & 15), 16);
        output.push(hex);
      }
      return output;
    }
    function getOutputLength(inputLength8) {
      return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;
    }
    function wordsToMd5(x, len) {
      x[len >> 5] |= 128 << len % 32;
      x[getOutputLength(len) - 1] = len;
      let a = 1732584193;
      let b = -271733879;
      let c = -1732584194;
      let d = 271733878;
      for (let i = 0; i < x.length; i += 16) {
        const olda = a;
        const oldb = b;
        const oldc = c;
        const oldd = d;
        a = md5ff(a, b, c, d, x[i], 7, -680876936);
        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
        c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
        b = md5gg(b, c, d, a, x[i], 20, -373897302);
        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
        a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
        d = md5hh(d, a, b, c, x[i], 11, -358537222);
        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
        a = md5ii(a, b, c, d, x[i], 6, -198630844);
        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
        a = safeAdd(a, olda);
        b = safeAdd(b, oldb);
        c = safeAdd(c, oldc);
        d = safeAdd(d, oldd);
      }
      return [a, b, c, d];
    }
    function bytesToWords(input) {
      if (input.length === 0) {
        return [];
      }
      const length8 = input.length * 8;
      const output = new Uint32Array(getOutputLength(length8));
      for (let i = 0; i < length8; i += 8) {
        output[i >> 5] |= (input[i / 8] & 255) << i % 32;
      }
      return output;
    }
    function safeAdd(x, y) {
      const lsw = (x & 65535) + (y & 65535);
      const msw = (x >> 16) + (y >> 16) + (lsw >> 16);
      return msw << 16 | lsw & 65535;
    }
    function bitRotateLeft(num, cnt) {
      return num << cnt | num >>> 32 - cnt;
    }
    function md5cmn(q, a, b, x, s, t) {
      return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
    }
    function md5ff(a, b, c, d, x, s, t) {
      return md5cmn(b & c | ~b & d, a, b, x, s, t);
    }
    function md5gg(a, b, c, d, x, s, t) {
      return md5cmn(b & d | c & ~d, a, b, x, s, t);
    }
    function md5hh(a, b, c, d, x, s, t) {
      return md5cmn(b ^ c ^ d, a, b, x, s, t);
    }
    function md5ii(a, b, c, d, x, s, t) {
      return md5cmn(c ^ (b | ~d), a, b, x, s, t);
    }
    var _default = md5;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/v3.js
var require_v3 = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/v3.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _v = _interopRequireDefault(require_v35());
    var _md = _interopRequireDefault(require_md5());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var v3 = (0, _v.default)("v3", 48, _md.default);
    var _default = v3;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/native.js
var require_native = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/native.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var randomUUID = typeof crypto !== "undefined" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
    var _default = {
      randomUUID
    };
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/v4.js
var require_v4 = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/v4.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _native = _interopRequireDefault(require_native());
    var _rng = _interopRequireDefault(require_rng());
    var _stringify = require_stringify();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function v4(options, buf, offset) {
      if (_native.default.randomUUID && !buf && !options) {
        return _native.default.randomUUID();
      }
      options = options || {};
      const rnds = options.random || (options.rng || _rng.default)();
      rnds[6] = rnds[6] & 15 | 64;
      rnds[8] = rnds[8] & 63 | 128;
      if (buf) {
        offset = offset || 0;
        for (let i = 0; i < 16; ++i) {
          buf[offset + i] = rnds[i];
        }
        return buf;
      }
      return (0, _stringify.unsafeStringify)(rnds);
    }
    var _default = v4;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/sha1.js
var require_sha1 = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/sha1.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    function f(s, x, y, z) {
      switch (s) {
        case 0:
          return x & y ^ ~x & z;
        case 1:
          return x ^ y ^ z;
        case 2:
          return x & y ^ x & z ^ y & z;
        case 3:
          return x ^ y ^ z;
      }
    }
    function ROTL(x, n) {
      return x << n | x >>> 32 - n;
    }
    function sha1(bytes) {
      const K = [1518500249, 1859775393, 2400959708, 3395469782];
      const H = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
      if (typeof bytes === "string") {
        const msg = unescape(encodeURIComponent(bytes));
        bytes = [];
        for (let i = 0; i < msg.length; ++i) {
          bytes.push(msg.charCodeAt(i));
        }
      } else if (!Array.isArray(bytes)) {
        bytes = Array.prototype.slice.call(bytes);
      }
      bytes.push(128);
      const l = bytes.length / 4 + 2;
      const N = Math.ceil(l / 16);
      const M = new Array(N);
      for (let i = 0; i < N; ++i) {
        const arr = new Uint32Array(16);
        for (let j = 0; j < 16; ++j) {
          arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];
        }
        M[i] = arr;
      }
      M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
      M[N - 1][14] = Math.floor(M[N - 1][14]);
      M[N - 1][15] = (bytes.length - 1) * 8 & 4294967295;
      for (let i = 0; i < N; ++i) {
        const W = new Uint32Array(80);
        for (let t = 0; t < 16; ++t) {
          W[t] = M[i][t];
        }
        for (let t = 16; t < 80; ++t) {
          W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
        }
        let a = H[0];
        let b = H[1];
        let c = H[2];
        let d = H[3];
        let e = H[4];
        for (let t = 0; t < 80; ++t) {
          const s = Math.floor(t / 20);
          const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;
          e = d;
          d = c;
          c = ROTL(b, 30) >>> 0;
          b = a;
          a = T;
        }
        H[0] = H[0] + a >>> 0;
        H[1] = H[1] + b >>> 0;
        H[2] = H[2] + c >>> 0;
        H[3] = H[3] + d >>> 0;
        H[4] = H[4] + e >>> 0;
      }
      return [H[0] >> 24 & 255, H[0] >> 16 & 255, H[0] >> 8 & 255, H[0] & 255, H[1] >> 24 & 255, H[1] >> 16 & 255, H[1] >> 8 & 255, H[1] & 255, H[2] >> 24 & 255, H[2] >> 16 & 255, H[2] >> 8 & 255, H[2] & 255, H[3] >> 24 & 255, H[3] >> 16 & 255, H[3] >> 8 & 255, H[3] & 255, H[4] >> 24 & 255, H[4] >> 16 & 255, H[4] >> 8 & 255, H[4] & 255];
    }
    var _default = sha1;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/v5.js
var require_v5 = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/v5.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _v = _interopRequireDefault(require_v35());
    var _sha = _interopRequireDefault(require_sha1());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var v5 = (0, _v.default)("v5", 80, _sha.default);
    var _default = v5;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/nil.js
var require_nil = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/nil.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _default = "00000000-0000-0000-0000-000000000000";
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/version.js
var require_version = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/version.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _validate = _interopRequireDefault(require_validate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function version(uuid) {
      if (!(0, _validate.default)(uuid)) {
        throw TypeError("Invalid UUID");
      }
      return parseInt(uuid.slice(14, 15), 16);
    }
    var _default = version;
    exports.default = _default;
  }
});

// node_modules/uuid/dist/commonjs-browser/index.js
var require_commonjs_browser = __commonJS({
  "node_modules/uuid/dist/commonjs-browser/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "NIL", {
      enumerable: true,
      get: function get() {
        return _nil.default;
      }
    });
    Object.defineProperty(exports, "parse", {
      enumerable: true,
      get: function get() {
        return _parse.default;
      }
    });
    Object.defineProperty(exports, "stringify", {
      enumerable: true,
      get: function get() {
        return _stringify.default;
      }
    });
    Object.defineProperty(exports, "v1", {
      enumerable: true,
      get: function get() {
        return _v.default;
      }
    });
    Object.defineProperty(exports, "v3", {
      enumerable: true,
      get: function get() {
        return _v2.default;
      }
    });
    Object.defineProperty(exports, "v4", {
      enumerable: true,
      get: function get() {
        return _v3.default;
      }
    });
    Object.defineProperty(exports, "v5", {
      enumerable: true,
      get: function get() {
        return _v4.default;
      }
    });
    Object.defineProperty(exports, "validate", {
      enumerable: true,
      get: function get() {
        return _validate.default;
      }
    });
    Object.defineProperty(exports, "version", {
      enumerable: true,
      get: function get() {
        return _version.default;
      }
    });
    var _v = _interopRequireDefault(require_v1());
    var _v2 = _interopRequireDefault(require_v3());
    var _v3 = _interopRequireDefault(require_v4());
    var _v4 = _interopRequireDefault(require_v5());
    var _nil = _interopRequireDefault(require_nil());
    var _version = _interopRequireDefault(require_version());
    var _validate = _interopRequireDefault(require_validate());
    var _stringify = _interopRequireDefault(require_stringify());
    var _parse = _interopRequireDefault(require_parse());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/fake-mediastreamtrack/index.js
var require_fake_mediastreamtrack = __commonJS({
  "node_modules/fake-mediastreamtrack/index.js"(exports) {
    var { EventTarget, defineEventAttribute } = require_event_target_shim();
    var uuidv4 = require_commonjs_browser().v4;
    var FakeMediaStreamTrack = class _FakeMediaStreamTrack extends EventTarget {
      constructor({
        kind,
        id,
        label,
        isolated,
        muted,
        readyState,
        constraints,
        data
      } = {}) {
        super();
        if (!kind) {
          throw new TypeError("missing kind");
        }
        this._id = id || uuidv4();
        this._kind = kind;
        this._label = label || "";
        this._isolated = isolated || false;
        this._enabled = true;
        this._muted = muted || false;
        this._readyState = readyState || "live";
        this._constraints = constraints || {};
        this._data = data || {};
      }
      get id() {
        return this._id;
      }
      get kind() {
        return this._kind;
      }
      get label() {
        return this._label;
      }
      get isolated() {
        return this._isolated;
      }
      get enabled() {
        return this._enabled;
      }
      set enabled(enabled) {
        const changed = this._enabled !== enabled;
        this._enabled = enabled;
        if (changed) {
          this.dispatchEvent({ type: "@enabledchange" });
        }
      }
      get muted() {
        return this._muted;
      }
      get readyState() {
        return this._readyState;
      }
      get data() {
        return this._data;
      }
      set data(data) {
        throw new TypeError("cannot replace data object");
      }
      clone({ id, data } = {}) {
        return new _FakeMediaStreamTrack(
          {
            id: id || uuidv4(),
            kind: this._kind,
            label: this._label,
            isolated: this._isolated,
            enabled: this._enabled,
            muted: this._muted,
            readyState: this._readyState,
            constraints: this._constraints,
            data: data !== void 0 ? data : this._data
          }
        );
      }
      stop() {
        if (this._readyState === "ended") {
          return;
        }
        this._readyState = "ended";
        this.dispatchEvent({ type: "@stop" });
      }
      getConstraints() {
        return this._constraints;
      }
      applyConstraints(constraints) {
        if (this._readyState === "ended") {
          return;
        }
        this._constraints = constraints;
      }
      remoteStop() {
        if (this._readyState === "ended") {
          return;
        }
        this._readyState = "ended";
        this.dispatchEvent({ type: "@stop" });
        this.dispatchEvent({ type: "ended" });
      }
      remoteMute() {
        if (this._muted) {
          return;
        }
        this._muted = true;
        this.dispatchEvent({ type: "mute" });
      }
      remoteUnmute() {
        if (!this._muted) {
          return;
        }
        this._muted = false;
        this.dispatchEvent({ type: "unmute" });
      }
    };
    defineEventAttribute(FakeMediaStreamTrack.prototype, "ended");
    defineEventAttribute(FakeMediaStreamTrack.prototype, "mute");
    defineEventAttribute(FakeMediaStreamTrack.prototype, "unmute");
    defineEventAttribute(FakeMediaStreamTrack.prototype, "@enabledchange");
    defineEventAttribute(FakeMediaStreamTrack.prototype, "@stop");
    defineEventAttribute(FakeMediaStreamTrack.prototype, "isolationchange");
    defineEventAttribute(FakeMediaStreamTrack.prototype, "overconstrained");
    exports.FakeMediaStreamTrack = FakeMediaStreamTrack;
  }
});
export default require_fake_mediastreamtrack();
//# sourceMappingURL=fake-mediastreamtrack.js.map
