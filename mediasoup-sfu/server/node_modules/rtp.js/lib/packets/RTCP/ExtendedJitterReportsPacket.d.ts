import { RtcpPacket, RtcpPacketDump } from './RtcpPacket';
/**
 * RTCP Extended Jitter Reports packet info dump.
 *
 * @category RTCP
 */
export type ExtendedJitterReportsPacketDump = RtcpPacketDump & {
    jitters: number[];
};
/**
 * RTCP Extended Jitter Reports packet.
 *
 * ```text
 *         0                   1                   2                   3
 *         0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 *        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * header |V=2|P|    RC   |     PT=195    |             length            |
 *        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 *        |                     inter-arrival jitter                      |
 *        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 *        :                              ...                              :
 *        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * ```
 *
 * @category RTCP
 *
 * @see
 * - [RFC 5450 section 4](https://datatracker.ietf.org/doc/html/rfc5450#section-4)
 */
export declare class ExtendedJitterReportsPacket extends RtcpPacket {
    #private;
    /**
     * @param view - If given it will be parsed. Otherwise an empty RTCP Extended
     *   Jitter Reports packet will be created.
     *
     * @throws
     * - If given `view` does not contain a valid RTCP Extended Jitter Reports
     *   packet.
     */
    constructor(view?: DataView);
    /**
     * Dump RTCP Extended Jitter Reports packet info.
     */
    dump(): ExtendedJitterReportsPacketDump;
    /**
     * @inheritDoc
     */
    getByteLength(): number;
    /**
     * @inheritDoc
     */
    serialize(buffer?: ArrayBuffer, byteOffset?: number): void;
    /**
     * @inheritDoc
     */
    clone(buffer?: ArrayBuffer, byteOffset?: number, serializationBuffer?: ArrayBuffer, serializationByteOffset?: number): ExtendedJitterReportsPacket;
    /**
     * Get inter-arrival jitter values.
     */
    getJitters(): number[];
    /**
     * Set inter-arrival jitter values.
     *
     * @remarks
     * - Serialization is needed after calling this method.
     */
    setJitters(jitters: number[]): void;
    /**
     * Add inter-arrival jitter value.
     *
     * @remarks
     * - Serialization is needed after calling this method.
     */
    addJitter(jitter: number): void;
}
//# sourceMappingURL=ExtendedJitterReportsPacket.d.ts.map