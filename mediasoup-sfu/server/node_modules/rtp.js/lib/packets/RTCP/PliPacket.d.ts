import { FeedbackPacket, FeedbackPacketDump } from './FeedbackPacket';
/**
 * RTCP PLI packet info dump.
 *
 * @category RTCP
 */
export type PliPacketDump = FeedbackPacketDump;
/**
 * RTCP PLI packet (RTCP Payload Specific Feedback).
 *
 * ```text
 *  0                   1                   2                   3
 *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * |V=2|P|  FMT=1  |  PT=PSFB=206  |          length=2             |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * |                  SSRC of packet sender                        |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * |                  SSRC of media source                         |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * ```
 *
 * @category RTCP
 *
 * @see
 * - [RFC 4585 section 6.3.1](https://datatracker.ietf.org/doc/html/rfc4585#section-6.3.1)
 */
export declare class PliPacket extends FeedbackPacket {
    /**
     * @param view - If given it will be parsed. Otherwise an empty RTCP PLI
     *   packet will be created.
     *
     * @throws
     * - If given `view` does not contain a valid RTCP PLI packet.
     */
    constructor(view?: DataView);
    /**
     * Dump RTCP PLI packet info.
     */
    dump(): PliPacketDump;
    /**
     * @inheritDoc
     */
    getByteLength(): number;
    /**
     * @inheritDoc
     */
    serialize(buffer?: ArrayBuffer, byteOffset?: number): void;
    /**
     * @inheritDoc
     */
    clone(buffer?: ArrayBuffer, byteOffset?: number, serializationBuffer?: ArrayBuffer, serializationByteOffset?: number): PliPacket;
}
//# sourceMappingURL=PliPacket.d.ts.map