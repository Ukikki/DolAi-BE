import { ExtendedReport, ExtendedReportDump } from './ExtendedReport';
/**
 * Receiver Reference Time Extended Report dump.
 *
 * @category RTCP Extended Reports
 */
export type RrtExtendedReportDump = ExtendedReportDump & {
    ntpSeq: number;
    ntpFraction: number;
};
/**
 * Receiver Reference Time Extended Report.
 *
 * ```text
 *  0                   1                   2                   3
 *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * |     BT=4      |   reserved    |       block length = 2        |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * |              NTP timestamp, most significant word             |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * |             NTP timestamp, least significant word             |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * ```
 *
 * @category RTCP Extended Reports
 *
 * @see
 * - [RFC 3611 section 4.4](https://datatracker.ietf.org/doc/html/rfc3611#section-4.4)
 */
export declare class RrtExtendedReport extends ExtendedReport {
    /**
     * @param view - If given it will be parsed. Otherwise an empty Receiver
     *   Reference Time Extended Report will be created.
     */
    constructor(view?: DataView);
    /**
     * Dump Receiver Reference Time Extended Report info.
     */
    dump(): RrtExtendedReportDump;
    /**
     * @inheritDoc
     */
    getByteLength(): number;
    /**
     * @inheritDoc
     */
    serialize(buffer?: ArrayBuffer, byteOffset?: number): void;
    /**
     * @inheritDoc
     */
    clone(buffer?: ArrayBuffer, byteOffset?: number, serializationBuffer?: ArrayBuffer, serializationByteOffset?: number): RrtExtendedReport;
    /**
     * Get NTP seconds.
     */
    getNtpSeconds(): number;
    /**
     * Set NTP seconds.
     */
    setNtpSeconds(seconds: number): void;
    /**
     * Get NTP fraction.
     */
    getNtpFraction(): number;
    /**
     * Set NTP fraction.
     */
    setNtpFraction(fraction: number): void;
}
//# sourceMappingURL=RrtExtendedReport.d.ts.map