import { ExtendedReport, ExtendedReportDump } from './ExtendedReport';
/**
 * ECN Summary Extended Report dump.
 *
 * @category RTCP Extended Reports
 */
export type EcnExtendedReportDump = ExtendedReportDump & {
    ssrc: number;
    ect0Counter: number;
    ect1Counter: number;
    ecnCeCounter: number;
    nonEctCounter: number;
    lostPacketsCounter: number;
    duplicationCounter: number;
};
/**
 * ECN Summary Extended Report.
 *
 * ```text
 *  0                   1                   2                   3
 *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * |     BT=13     |   reserved    |       block length = 5        |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * | SSRC of Media Sender                                          |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * | ECT (0) Counter                                               |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * | ECT (1) Counter                                               |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * | ECN-CE Counter                | not-ECT Counter               |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * | Lost Packets Counter          | Duplication Counter           |
 * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 * ```
 *
 * @category RTCP Extended Reports
 *
 * @see
 * - [RFC 6679 section 5.2](https://datatracker.ietf.org/doc/html/rfc6679#section-5.2)
 */
export declare class EcnExtendedReport extends ExtendedReport {
    #private;
    /**
     * @param view - If given it will be parsed. Otherwise an empty ECN Summary
     *   Extended Report will be created.
     */
    constructor(view?: DataView);
    /**
     * Dump ECN Summary Extended Report info.
     */
    dump(): EcnExtendedReportDump;
    /**
     * @inheritDoc
     */
    getByteLength(): number;
    /**
     * @inheritDoc
     */
    serialize(buffer?: ArrayBuffer, byteOffset?: number): void;
    /**
     * @inheritDoc
     */
    clone(buffer?: ArrayBuffer, byteOffset?: number, serializationBuffer?: ArrayBuffer, serializationByteOffset?: number): EcnExtendedReport;
    /**
     * Get SSRC of media sender.
     */
    getSsrc(): number;
    /**
     * Set SSRC of media sender.
     */
    setSsrc(ssrc: number): void;
    /**
     * Get ECT (0) Counter.
     */
    getEct0Counter(): number;
    /**
     * Set ECT (0) Counter.
     */
    setEct0Counter(counter: number): void;
    /**
     * Get ECT (1) Counter.
     */
    getEct1Counter(): number;
    /**
     * Set ECT (1) Counter.
     */
    setEct1Counter(counter: number): void;
    /**
     * Get ECN-CE Counter.
     */
    getEcnCeCounter(): number;
    /**
     * Set ECN-CE Counter.
     */
    setEcnCeCounter(counter: number): void;
    /**
     * Get not-ECT Counter.
     */
    getNonEctCounter(): number;
    /**
     * Set not-ECT Counter.
     */
    setNonEctCounter(counter: number): void;
    /**
     * Get Lost Packets Counter.
     */
    getLostPacketsCounter(): number;
    /**
     * Set Lost Packets Counter.
     */
    setLostPacketsCounter(counter: number): void;
    /**
     * Get Duplication Counter.
     */
    getDuplicationCounter(): number;
    /**
     * Set Duplication Counter.
     */
    setDuplicationCounter(counter: number): void;
}
//# sourceMappingURL=EcnExtendedReport.d.ts.map