/**
 * Read 3 bytes starting from byte `pos` in `view` as unsigned value.
 *
 * @category Utils
 * @hidden
 */
export declare function read3BytesInDataView({ view, pos }: {
    view: DataView;
    pos: number;
}): number;
/**
 * Write an unsigned value in 3 bytes starting from byte `pos` in `view`.
 *
 * @category Utils
 * @hidden
 */
export declare function write3BytesInDataView({ view, pos, value }: {
    view: DataView;
    pos: number;
    value: number;
}): void;
/**
 * Read 3 bytes starting from byte `pos` in `view` as signed value.
 *
 * @category Utils
 * @hidden
 */
export declare function readSigned3BytesInDataView({ view, pos }: {
    view: DataView;
    pos: number;
}): number;
/**
 * Write a signed value in 3 bytes starting from byte `pos` in `view`.
 *
 * @category Utils
 * @hidden
 */
export declare function writeSigned3BytesInDataView({ view, pos, value }: {
    view: DataView;
    pos: number;
    value: number;
}): void;
//# sourceMappingURL=byteOps.d.ts.map