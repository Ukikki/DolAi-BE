services:
  redis:
    image: redis:6.0.9
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_DATABASE=dolai
      - REDIS_HOST=redis-container  # 변경된 부분
      - REDIS_PORT=6379
      - REDIS_PASSWORD=ukikki1212
    networks:
      - backend_network
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    env_file:
      - .env  # .env 파일 로드
    environment:
      - MYSQL_DATABASE=dolai
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  # 루트 비밀번호
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}  # dolai DB 전용 사용자 비밀번호
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend_network  # MySQL 네트워크 설정

  arangodb:
    image: arangodb:latest
    container_name: arangodb-container
    restart: always
    env_file:
      - .env  # .env 파일 로드
    environment:
      - ARANGO_DATABASE=dolai
      - ARANGO_ROOT_PASSWORD=${ARANGO_PASSWORD}  # ArangoDB 루트 비밀번호
    ports:
      - "8529:8529"
    volumes:
      - arangodb_data:/var/lib/arangodb3
    networks:
      - backend_network  # ArangoDB 네트워크 설정

  backend:
    build: . # 백엔드 애플리케이션 빌드 위치
    container_name: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/dolai  # MySQL 컨테이너의 호스트 이름
    depends_on:
      - mysql
      - arangodb
      - redis
    networks:
      - backend_network  # 백엔드 네트워크 설정
    ports:
      - "8081:8080"  # Spring Boot 포트 매핑

  mediasoup-server:
    image: node:18  # Mediasoup 컨테이너가 Node.js 18 이상 버전을 사용
    container_name: mediasoup-server
    working_dir: /app/server
    volumes:
      - ../mediasoup-sfu/server:/app/server
    command: sh -c "apt update && apt install -y python3-pip && npm install --legacy-peer-deps && npm start"
    ports:
      - "4443:4443"
    networks:
      - backend_network

  mediasoup-app:
    image: node:18
    container_name: mediasoup-app
    working_dir: /app/app
    volumes:
      - ../mediasoup-sfu/app:/app/app
    command: bash -c "npm install && npm start"
    ports:
      - "3000:3000"
    networks:
      - backend_network

  whisper:
    build:
      context: ../whisper-server
      dockerfile: Dockerfile
    container_name: whisper-server
    stdin_open: true
    tty: true
    volumes:
      - ../whisper-server:/app
    ports:
      - "5001:5001"
    networks:
      - backend_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - ../whisper-server/.env

networks:
  backend_network:
    driver: bridge  # Docker 브리지 네트워크 설정

volumes:
  mysql_data:
  arangodb_data:
