services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    env_file:
      - .env  # .env 파일 로드
    environment:
      - MYSQL_DATABASE=dolai
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  # 루트 비밀번호
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}  # dolai DB 전용 사용자 비밀번호
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend_network  # MySQL 네트워크 설정

  arangodb:
    image: arangodb:latest
    container_name: arangodb-container
    restart: always
    env_file:
      - .env  # .env 파일 로드
    environment:
      - ARANGO_DATABASE=dolai
      - ARANGO_ROOT_PASSWORD=${ARANGO_PASSWORD}  # ArangoDB 루트 비밀번호
    ports:
      - "8529:8529"
    volumes:
      - arangodb_data:/var/lib/arangodb3
    networks:
      - backend_network  # ArangoDB 네트워크 설정

  backend:
    build: . # 백엔드 애플리케이션 빌드 위치
    container_name: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/dolai  # MySQL 컨테이너의 호스트 이름
    depends_on:
      - mysql
      - arangodb
    networks:
      - backend_network  # 백엔드 네트워크 설정
    ports:
      - "8081:8080"  # Spring Boot 포트 매핑

networks:
  backend_network:
    driver: bridge  # Docker 브리지 네트워크 설정

volumes:
  mysql_data:
  arangodb_data:
