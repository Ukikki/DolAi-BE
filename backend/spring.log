nohup: ignoring input

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.4)

2025-05-15T15:21:45.213Z  INFO 46517 --- [backend] [           main] com.dolai.backend.BackendApplication     : Starting BackendApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 46517 (/home/ubuntu/DolAi-BE/backend/build/libs/backend-0.0.1-SNAPSHOT.jar started by ubuntu in /home/ubuntu/DolAi-BE/backend)
2025-05-15T15:21:45.224Z  INFO 46517 --- [backend] [           main] com.dolai.backend.BackendApplication     : The following 1 profile is active: "oauth"
2025-05-15T15:21:47.538Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-15T15:21:47.540Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-15T15:21:47.567Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-05-15T15:21:48.330Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-15T15:21:48.332Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-15T15:21:48.644Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dolai.backend.oauth.repository.TokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-15T15:21:48.685Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 347 ms. Found 13 JPA repository interfaces.
2025-05-15T15:21:48.700Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-15T15:21:48.701Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-15T15:21:48.717Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.meeting.repository.ParticipantsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.718Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.meeting.repository.MeetingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.720Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.721Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.todo.repository.TodoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.722Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.document.repository.MetaDataRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.723Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.document.repository.DocumentPlacementRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.723Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.document.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.723Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.directory.repository.DirectoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.724Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.directory.repository.DirectoryUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.724Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.notification.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.725Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.whiteboard.repository.WhiteboardSessionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.726Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.stt_log.repository.STTLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.727Z  INFO 46517 --- [backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dolai.backend.friend.repository.FriendsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-15T15:21:48.736Z  INFO 46517 --- [backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 1 Redis repository interface.
2025-05-15T15:21:50.843Z  INFO 46517 --- [backend] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8081 (http)
2025-05-15T15:21:50.866Z  INFO 46517 --- [backend] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-15T15:21:50.868Z  INFO 46517 --- [backend] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-05-15T15:21:50.946Z  INFO 46517 --- [backend] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-05-15T15:21:50.948Z  INFO 46517 --- [backend] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 5508 ms
2025-05-15T15:21:51.682Z  INFO 46517 --- [backend] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-15T15:21:51.792Z  INFO 46517 --- [backend] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2025-05-15T15:21:51.875Z  INFO 46517 --- [backend] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-05-15T15:21:52.360Z  INFO 46517 --- [backend] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-15T15:21:52.407Z  INFO 46517 --- [backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-15T15:21:53.031Z  INFO 46517 --- [backend] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c45191e
2025-05-15T15:21:53.035Z  INFO 46517 --- [backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-15T15:21:53.122Z  WARN 46517 --- [backend] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-15T15:21:55.163Z  INFO 46517 --- [backend] [           main] o.h.m.i.EntityInstantiatorPojoStandard   : HHH000182: No default (no-argument) constructor for class: com.dolai.backend.document.model.DocumentPlacement (class must be instantiated by Interceptor)
2025-05-15T15:21:55.722Z  INFO 46517 --- [backend] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-15T15:21:56.016Z  INFO 46517 --- [backend] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-15T15:21:57.686Z  INFO 46517 --- [backend] [           main] c.dolai.backend.oauth.jwt.TokenProvider  : 🔑 JWT Secret Key 초기화 중...
2025-05-15T15:21:57.693Z  INFO 46517 --- [backend] [           main] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ JWT Secret Key 설정 완료!
2025-05-15T15:21:58.047Z  INFO 46517 --- [backend] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
✅ Redis 연결 성공: Hello, Redis!
2025-05-15T15:22:04.066Z  WARN 46517 --- [backend] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-15T15:22:05.010Z  INFO 46517 --- [backend] [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-15T15:22:05.213Z  INFO 46517 --- [backend] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@484b250b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55e74dde, org.springframework.security.web.context.SecurityContextHolderFilter@29e456f1, org.springframework.security.web.header.HeaderWriterFilter@73766249, org.springframework.web.filter.CorsFilter@1f94500f, org.springframework.security.web.authentication.logout.LogoutFilter@6264bd46, com.dolai.backend.oauth.jwt.filter.TokenExceptionFilter@6fca1c7e, com.dolai.backend.oauth.jwt.filter.TokenAuthenticationFilter@55785ee7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@318adb06, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@723afc0c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7eb81ff1, org.springframework.security.web.session.SessionManagementFilter@4fbca40, org.springframework.security.web.access.ExceptionTranslationFilter@33b5af2b, org.springframework.security.web.access.intercept.AuthorizationFilter@7929ce8b]
2025-05-15T15:22:06.338Z  INFO 46517 --- [backend] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8081 (http) with context path ''
2025-05-15T15:22:06.343Z  INFO 46517 --- [backend] [           main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2025-05-15T15:22:06.346Z  INFO 46517 --- [backend] [           main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@31aab023]]
2025-05-15T15:22:06.347Z  INFO 46517 --- [backend] [           main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2025-05-15T15:22:06.423Z  INFO 46517 --- [backend] [           main] com.dolai.backend.BackendApplication     : Started BackendApplication in 22.299 seconds (process running for 23.516)
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:22:19.891Z  INFO 46517 --- [backend] [0.0-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-15T15:22:19.892Z  INFO 46517 --- [backend] [0.0-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-15T15:22:19.895Z  INFO 46517 --- [backend] [0.0-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-05-15T15:22:20.150Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:20.151Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:20.154Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
2025-05-15T15:22:20.156Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:20.229Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:22:20.229Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select t1_0.id,t1_0.created_at,t1_0.due_date,t1_0.meeting_id,t1_0.status,t1_0.title,t1_0.updated_at,t1_0.user_id from todo t1_0 left join user u1_0 on u1_0.id=t1_0.user_id where u1_0.id=?
2025-05-15T15:22:20.373Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:20.378Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
2025-05-15T15:22:20.378Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:20.385Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:20.393Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:22:20.397Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select t1_0.id,t1_0.created_at,t1_0.due_date,t1_0.meeting_id,t1_0.status,t1_0.title,t1_0.updated_at,t1_0.user_id from todo t1_0 left join user u1_0 on u1_0.id=t1_0.user_id where u1_0.id=?
2025-05-15T15:22:20.421Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:20.428Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:20.443Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:22:20.458Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:20.463Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:20.478Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:22:27.032Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.036Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:27.050Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:22:27.107Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.d.b.meeting.service.MeetingService     : 초대 링크 생성 완료: https://13.209.37.189:3000/sfu/1747322547104_103935828791817319817
Hibernate: select m1_0.id,m1_0.created_at,m1_0.end_time,m1_0.host_user_id,m1_0.invite_url,m1_0.start_time,m1_0.status,m1_0.title,m1_0.updated_at,p1_0.meeting_id,p1_0.id,p1_0.created_at,p1_0.role,p1_0.updated_at,p1_0.user_id,u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from meeting m1_0 left join participants p1_0 on m1_0.id=p1_0.meeting_id left join user u1_0 on u1_0.id=p1_0.user_id where m1_0.id=?
Hibernate: insert into meeting (created_at,end_time,host_user_id,invite_url,start_time,status,title,updated_at,id) values (?,?,?,?,?,?,?,?,?)
2025-05-15T15:22:27.670Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.d.b.meeting.service.MeetingService     : 회의 생성 완료: com.dolai.backend.meeting.model.Meeting@525b13df
2025-05-15T15:22:27.718Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.720Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:27.729Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 left join meeting m1_0 on m1_0.id=s1_0.meeting_id where m1_0.id=? order by s1_0.timestamp
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:22:27.854Z  INFO 46517 --- [backend] [0.0-8081-exec-3] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.858Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.860Z  INFO 46517 --- [backend] [0.0-8081-exec-3] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
2025-05-15T15:22:27.858Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.863Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:27.867Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:27.875Z  INFO 46517 --- [backend] [0.0-8081-exec-3] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:22:27.878Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:22:27.881Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select f1_0.id,f1_0.created_at,f1_0.receiver_id,f1_0.requester_id,f1_0.status,f1_0.updated_at from friends f1_0 join user r1_0 on r1_0.id=f1_0.requester_id join user r2_0 on r2_0.id=f1_0.receiver_id where f1_0.status=? and r1_0.id=? or f1_0.status=? and r2_0.id=?
2025-05-15T15:22:27.901Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.913Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:27.922Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.934Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.936Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
2025-05-15T15:22:27.940Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:27.950Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
2025-05-15T15:22:27.954Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:27.966Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:27.970Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
2025-05-15T15:22:27.975Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:27.986Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select f1_0.id,f1_0.created_at,f1_0.receiver_id,f1_0.requester_id,f1_0.status,f1_0.updated_at from friends f1_0 join user r1_0 on r1_0.id=f1_0.requester_id join user r2_0 on r2_0.id=f1_0.receiver_id where f1_0.status=? and r1_0.id=? or f1_0.status=? and r2_0.id=?
2025-05-15T15:22:28.003Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:22:28.010Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:22:28.016Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:23:06.152Z  INFO 46517 --- [backend] [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[3 current WS(3)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(1)], stompBrokerRelay[null], inboundChannel[pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 30], outboundChannel[pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 6, completed tasks = 41]
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:24:46.134Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:24:46.136Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:24:46.142Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select ws1_0.meeting_id,ws1_0.active,ws1_0.end_time,ws1_0.start_time from whiteboard_session ws1_0 where ws1_0.meeting_id=?
Hibernate: insert into whiteboard_session (active,end_time,start_time,meeting_id) values (?,?,?,?)
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:24:53.940Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:24:53.943Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:24:53.950Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select f1_0.id,f1_0.created_at,f1_0.receiver_id,f1_0.requester_id,f1_0.status,f1_0.updated_at from friends f1_0 join user r1_0 on r1_0.id=f1_0.requester_id join user r2_0 on r2_0.id=f1_0.receiver_id where f1_0.status=? and r1_0.id=? or f1_0.status=? and r2_0.id=?
2025-05-15T15:24:53.972Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:24:53.975Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:24:53.983Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select f1_0.id,f1_0.created_at,f1_0.receiver_id,f1_0.requester_id,f1_0.status,f1_0.updated_at from friends f1_0 join user r1_0 on r1_0.id=f1_0.requester_id join user r2_0 on r2_0.id=f1_0.receiver_id where f1_0.status=? and r1_0.id=? or f1_0.status=? and r2_0.id=?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:25:03.491Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:25:03.496Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:25:03.503Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select m1_0.id,m1_0.created_at,m1_0.end_time,m1_0.host_user_id,m1_0.invite_url,m1_0.start_time,m1_0.status,m1_0.title,m1_0.updated_at from meeting m1_0 where m1_0.id=?
Hibernate: update meeting set created_at=?,end_time=?,host_user_id=?,invite_url=?,start_time=?,status=?,title=?,updated_at=? where id=?
2025-05-15T15:25:03.559Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.meeting.service.MeetingService     : ✅ 회의 종료 처리 완료: meetingId=758c3f95-1c26-4455-914c-7e0ef58af548, host=hsugongyong@gmail.com
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 left join meeting m1_0 on m1_0.id=s1_0.meeting_id where m1_0.id=? order by s1_0.timestamp
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:25:04.110Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:25:04.112Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 103935828791817319817
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:25:04.118Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select m1_0.id,m1_0.created_at,m1_0.end_time,m1_0.host_user_id,m1_0.invite_url,m1_0.start_time,m1_0.status,m1_0.title,m1_0.updated_at from meeting m1_0 where m1_0.id=?
Hibernate: update meeting set created_at=?,end_time=?,host_user_id=?,invite_url=?,start_time=?,status=?,title=?,updated_at=? where id=?
2025-05-15T15:25:04.140Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.meeting.service.MeetingService     : ✅ 회의 종료 처리 완료: meetingId=758c3f95-1c26-4455-914c-7e0ef58af548, host=hsugongyong@gmail.com
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 left join meeting m1_0 on m1_0.id=s1_0.meeting_id where m1_0.id=? order by s1_0.timestamp
Hibernate: select p1_0.meeting_id,p1_0.id,p1_0.created_at,p1_0.role,p1_0.updated_at,p1_0.user_id,u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from participants p1_0 left join user u1_0 on u1_0.id=p1_0.user_id where p1_0.meeting_id=?
2025-05-15T15:25:04.976Z  WARN 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.utils.ResourceUtils           : Couldn't get resource: docx4j.properties
2025-05-15T15:25:04.977Z  WARN 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.Docx4jProperties              : Couldn't find/read docx4j.properties; docx4j.properties not found via classloader.
2025-05-15T15:25:05.103Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.jaxb.Context                  : java.vendor=Ubuntu
2025-05-15T15:25:05.104Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.jaxb.Context                  : java.version=21.0.7
2025-05-15T15:25:05.104Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.jaxb.Context                  : java.vm.name=OpenJDK 64-Bit Server VM
Hibernate: select p1_0.meeting_id,p1_0.id,p1_0.created_at,p1_0.role,p1_0.updated_at,p1_0.user_id,u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from participants p1_0 left join user u1_0 on u1_0.id=p1_0.user_id where p1_0.meeting_id=?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:25:07.772Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.jaxb.Context                  : JAXB Reference Implementation is in use.
2025-05-15T15:25:08.008Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.XmlUtils                      : default SAXParserFactory property : null
 Please consider using Xerces.
2025-05-15T15:25:08.015Z  WARN 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.XmlUtils                      : actual SAXParserFactory: com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl
2025-05-15T15:25:08.018Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.XmlUtils                      : default DocumentBuilderFactory property: null
 Please consider using Xerces.
2025-05-15T15:25:08.020Z  WARN 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.XmlUtils                      : actual DocumentBuilderFactory: com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl
2025-05-15T15:25:08.132Z  INFO 46517 --- [backend] [0.0-8081-exec-8] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:08.131Z  INFO 46517 --- [backend] [0.0-8081-exec-4] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:08.136Z  INFO 46517 --- [backend] [0.0-8081-exec-4] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:08.136Z  INFO 46517 --- [backend] [0.0-8081-exec-8] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:08.137Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:25:08.137Z  INFO 46517 --- [backend] [0.0-8081-exec-4] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:25:08.150Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.utils.XPathFactoryUtil        : xpath implementation: org.docx4j.org.apache.xpath.jaxp.XPathFactoryImpl
2025-05-15T15:25:08.196Z  INFO 46517 --- [backend] [0.0-8081-exec-4] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 2528 ms
2025-05-15T15:25:08.197Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: ■ 프로젝트 A 진행 상황 보고<w:br/>- 핵심 기능 개발 완료 및 테스트 진행 중.<w:br/>- 사용자 인터페이스 디자인 개선 필요.<w:br/><w:br/>■ 프로젝트 B 기술적 문제 발생<w:br/>- 데이터베이스 연결 오류 발생.<w:br/>- 해결 방안 모색 및 긴급 패치 준비 중.<w:br/><w:br/>■ 다음 주 회의 일정 확정<w:br/>- 다음 주 화요일 오후 2시로 확정.<w:br/>- 각 팀별 진행 상황 및 문제점 공유 예정.
2025-05-15T15:25:08.198Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 3162 ms
2025-05-15T15:25:08.198Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: 
2025-05-15T15:25:08.379Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:25:08.380Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:08.384Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: - UI/UX 디자인팀에 프로젝트 A 사용자 인터페이스 개선 요청<w:br/>- 데이터베이스 팀에 프로젝트 B 데이터베이스 연결 오류 해결 지원 요청<w:br/>- 다음 주 회의 준비 및 자료 공유
2025-05-15T15:25:08.381Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:25:08.386Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:25:08.387Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:08.386Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:08.388Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: - 
2025-05-15T15:25:08.389Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:25:08.389Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:08.467Z  INFO 46517 --- [backend] [0.0-8081-exec-8] o.d.jaxb.NamespacePrefixMapperUtils      : Using ri.NamespacePrefixMapper, which is suitable for the JAXB RI
2025-05-15T15:25:08.482Z  INFO 46517 --- [backend] [0.0-8081-exec-8] o.d.jaxb.NamespacePrefixMapperUtils      : Using ri.NamespacePrefixMapperRelationshipsPart, which is suitable for the JAXB RI
2025-05-15T15:25:08.502Z  WARN 46517 --- [backend] [0.0-8081-exec-4] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
2025-05-15T15:25:08.503Z  WARN 46517 --- [backend] [0.0-8081-exec-8] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
2025-05-15T15:25:09.685Z  INFO 46517 --- [backend] [0.0-8081-exec-8] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:09.686Z  INFO 46517 --- [backend] [0.0-8081-exec-8] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:09.687Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:25:09.690Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 8 ms
2025-05-15T15:25:09.691Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: 
2025-05-15T15:25:09.712Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:25:09.712Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:09.712Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: - 
2025-05-15T15:25:09.713Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:25:09.713Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:09.717Z  WARN 46517 --- [backend] [0.0-8081-exec-8] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
2025-05-15T15:25:09.751Z  INFO 46517 --- [backend] [0.0-8081-exec-8] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:09.751Z  INFO 46517 --- [backend] [0.0-8081-exec-8] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:09.751Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:25:09.753Z  INFO 46517 --- [backend] [0.0-8081-exec-8] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 8 ms
2025-05-15T15:25:09.755Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: 
2025-05-15T15:25:09.771Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:25:09.771Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:09.772Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: -
2025-05-15T15:25:09.773Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:25:09.773Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:09.777Z  WARN 46517 --- [backend] [0.0-8081-exec-8] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
Hibernate: select d1_0.id from directory d1_0 left join meeting m1_0 on m1_0.id=d1_0.meeting_id where m1_0.id=? and d1_0.parent_id is null and d1_0.name=? limit ?
Hibernate: insert into directory (created_at,meeting_id,name,parent_id,type,updated_at,user_id) values (?,?,?,?,?,?,?)
Hibernate: insert into documents (created_at,file_type,file_url,meeting_id,title,updated_at) values (?,?,?,?,?,?)
Hibernate: insert into meta_data (created_at,document_id,size,type,updated_at) values (?,?,?,?,?)
Hibernate: select null,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
Hibernate: insert into document_placements (directory_id,document_id,user_id) values (?,?,?)
2025-05-15T15:25:09.998Z  INFO 46517 --- [backend] [0.0-8081-exec-4] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:09.999Z  INFO 46517 --- [backend] [0.0-8081-exec-4] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:09.999Z  INFO 46517 --- [backend] [0.0-8081-exec-4] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:25:10.009Z  INFO 46517 --- [backend] [0.0-8081-exec-4] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 17 ms
2025-05-15T15:25:10.009Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: ■ Project A progress report <w:br/>- Core function development completed and testing in progress.<w:br/>- User interface design needs improvement.<w:br/><w:br/>■ Project B encountered a technical problem <w:br/>- A database connection error occurred.<w:br/>- Searching for a solution and preparing an emergency patch.<w:br/><w:br/>■ Meeting schedule confirmed for next week <w:br/>- Confirmed for next Tuesday at 2 p.m. <w:br/>- Progress and issues for each team will be shared.
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:25:10.030Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:25:10.033Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:10.035Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: - Ask the UI/UX design team to improve the project A user interface<w:br/>- Ask the database team for help in resolving Project B database connection errors<w:br/> - Prepare for next week's meeting and share materials
2025-05-15T15:25:10.036Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:25:10.036Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:10.042Z  WARN 46517 --- [backend] [0.0-8081-exec-4] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
2025-05-15T15:25:10.073Z  INFO 46517 --- [backend] [0.0-8081-exec-4] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:10.074Z  INFO 46517 --- [backend] [0.0-8081-exec-4] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:25:10.075Z  INFO 46517 --- [backend] [0.0-8081-exec-4] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:25:10.077Z  INFO 46517 --- [backend] [0.0-8081-exec-4] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 7 ms
2025-05-15T15:25:10.080Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: ■ 项目 A 进度报告 <w：br/>- 核心功能开发完成并进行测试中 <w：br/>- 用户界面设计需要改进。<w：br/><w：br/>■ 项目 B 遇到技术问题 <w：br/>- 发生数据库连接错误。<w：br/>- 寻找解决方案并准备紧急补丁。<w：br/><w：br/>■ 确认下周的会议时间表 <w：br/>- 确认下周二下午 2 点 <w：br/>- 将共享每个团队的进度和问题。
2025-05-15T15:25:10.117Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:25:10.120Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:10.120Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: - 向 UI/UX 设计团队请求改进项目 A 用户界面<w：br/>- 请求数据库团队帮助解决项目 B 数据库连接错误<w：br/> - 为下周的会议做准备并共享材料
2025-05-15T15:25:10.120Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:25:10.121Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:25:10.130Z  WARN 46517 --- [backend] [0.0-8081-exec-4] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
Hibernate: select d1_0.id from directory d1_0 left join meeting m1_0 on m1_0.id=d1_0.meeting_id where m1_0.id=? and d1_0.parent_id is null and d1_0.name=? limit ?
Hibernate: select d1_0.id from directory d1_0 left join meeting m1_0 on m1_0.id=d1_0.meeting_id where m1_0.id=? and d1_0.parent_id is null and d1_0.name=? limit ?
Hibernate: insert into directory (created_at,meeting_id,name,parent_id,type,updated_at,user_id) values (?,?,?,?,?,?,?)
Hibernate: insert into documents (created_at,file_type,file_url,meeting_id,title,updated_at) values (?,?,?,?,?,?)
Hibernate: insert into meta_data (created_at,document_id,size,type,updated_at) values (?,?,?,?,?)
Hibernate: select null,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
Hibernate: insert into document_placements (directory_id,document_id,user_id) values (?,?,?)
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:28:48.185Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:48.189Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
2025-05-15T15:28:48.190Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:48.192Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:48.195Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
2025-05-15T15:28:48.196Z  INFO 46517 --- [backend] [0.0-8081-exec-4] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
2025-05-15T15:28:48.199Z ERROR 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ❌ User not found with sub: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:48.200Z  WARN 46517 --- [backend] [0.0-8081-exec-8] c.d.b.o.jwt.filter.TokenExceptionFilter  : ❌ CustomException caught: 해당 유저를 찾을 수 없습니다.
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:48.202Z ERROR 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : ❌ User not found with sub: 109319850861871561813
2025-05-15T15:28:48.202Z  WARN 46517 --- [backend] [.0-8081-exec-10] c.d.b.o.jwt.filter.TokenExceptionFilter  : ❌ CustomException caught: 해당 유저를 찾을 수 없습니다.
2025-05-15T15:28:48.207Z ERROR 46517 --- [backend] [0.0-8081-exec-4] c.dolai.backend.oauth.jwt.TokenProvider  : ❌ User not found with sub: 109319850861871561813
2025-05-15T15:28:48.207Z  WARN 46517 --- [backend] [0.0-8081-exec-4] c.d.b.o.jwt.filter.TokenExceptionFilter  : ❌ CustomException caught: 해당 유저를 찾을 수 없습니다.
2025-05-15T15:28:48.217Z  INFO 46517 --- [backend] [0.0-8081-exec-6] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:48.218Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:48.220Z  INFO 46517 --- [backend] [0.0-8081-exec-6] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:48.223Z ERROR 46517 --- [backend] [0.0-8081-exec-6] c.dolai.backend.oauth.jwt.TokenProvider  : ❌ User not found with sub: 109319850861871561813
2025-05-15T15:28:48.224Z  WARN 46517 --- [backend] [0.0-8081-exec-6] c.d.b.o.jwt.filter.TokenExceptionFilter  : ❌ CustomException caught: 해당 유저를 찾을 수 없습니다.
2025-05-15T15:28:48.223Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:48.229Z ERROR 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ❌ User not found with sub: 109319850861871561813
2025-05-15T15:28:48.229Z  WARN 46517 --- [backend] [0.0-8081-exec-5] c.d.b.o.jwt.filter.TokenExceptionFilter  : ❌ CustomException caught: 해당 유저를 찾을 수 없습니다.
2025-05-15T15:28:48.234Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:48.238Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:48.242Z ERROR 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : ❌ User not found with sub: 109319850861871561813
2025-05-15T15:28:48.242Z  WARN 46517 --- [backend] [0.0-8081-exec-7] c.d.b.o.jwt.filter.TokenExceptionFilter  : ❌ CustomException caught: 해당 유저를 찾을 수 없습니다.
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:28:53.582Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:53.582Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.oauth.controller.AuthController    : 🔹 소셜 로그인 요청: provider=google, code=4/0AUJR-x5cQ6CJpXOOtGnv0qwxPLGLps01Q1fhh7Wh5Ek6QoDLm98aScbgm1tES6GXVgKGgA
2025-05-15T15:28:53.582Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.backend.oauth.service.OAuth2Service  : 🔹 OAuth2 로그인 시도: provider=google, code=4/0AUJR-x5cQ6CJpXOOtGnv0qwxPLGLps01Q1fhh7Wh5Ek6QoDLm98aScbgm1tES6GXVgKGgA
2025-05-15T15:28:53.582Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.backend.oauth.service.OAuth2Service  : ✅ OAuth2Properties 확인: com.dolai.backend.oauth.model.OAuth2Properties@49692c4f
2025-05-15T15:28:53.582Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.backend.oauth.service.OAuth2Service  : ✅ providerConfig 로드 완료: clientId=871585618181-cma44cr08a4jl2hu17vl1bvt5gin2d4k.apps.googleusercontent.com
2025-05-15T15:28:53.583Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.oauth.service.OAuth2ApiClient      : 🔹 [OAuth2 요청] Provider: google, Token URI: https://oauth2.googleapis.com/token
2025-05-15T15:28:53.583Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.oauth.service.OAuth2ApiClient      : 🔹 [OAuth2 요청 데이터] client_id: 871585618181-cma44cr08a4jl2hu17vl1bvt5gin2d4k.apps.googleusercontent.com, redirect_uri: http://localhost:5173/auth/callback, code: 4/0AUJR-x5cQ6CJpXOOtGnv0qwxPLGLps01Q1fhh7Wh5Ek6QoDLm98aScbgm1tES6GXVgKGgA
2025-05-15T15:28:53.583Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.oauth.service.OAuth2ApiClient      : ✅ 최종 redirect_uri 확인: http://localhost:5173/auth/callback
2025-05-15T15:28:53.585Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:53.595Z ERROR 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : ❌ User not found with sub: 109319850861871561813
2025-05-15T15:28:53.596Z  WARN 46517 --- [backend] [0.0-8081-exec-2] c.d.b.o.jwt.filter.TokenExceptionFilter  : ❌ CustomException caught: 해당 유저를 찾을 수 없습니다.
2025-05-15T15:28:53.610Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:53.613Z  INFO 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:53.618Z ERROR 46517 --- [backend] [.0-8081-exec-10] c.dolai.backend.oauth.jwt.TokenProvider  : ❌ User not found with sub: 109319850861871561813
2025-05-15T15:28:53.618Z  WARN 46517 --- [backend] [.0-8081-exec-10] c.d.b.o.jwt.filter.TokenExceptionFilter  : ❌ CustomException caught: 해당 유저를 찾을 수 없습니다.
2025-05-15T15:28:53.926Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.oauth.service.OAuth2ApiClient      : Requesting user info from: https://www.googleapis.com/oauth2/v3/userinfo
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:54.154Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.backend.user.service.UserService     : 🆕 신규 사용자 저장: com.dolai.backend.user.model.User@1f2df789
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
Hibernate: insert into user (created_at,email,language,name,profile_image_url,provider,role,updated_at,id) values (?,?,?,?,?,?,?,?,?)
2025-05-15T15:28:54.172Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.backend.oauth.service.OAuth2Service  : ✅ 사용자 저장/업데이트 완료: userId=109319850861871561813
2025-05-15T15:28:54.173Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔹 AccessToken 생성 요청 - 사용자: com.dolai.backend.user.model.User@1b59fb91
2025-05-15T15:28:54.173Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 JWT 생성 시작...
2025-05-15T15:28:54.173Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 사용자: com.dolai.backend.user.model.User@1b59fb91, 권한: [ROLE_USER]
2025-05-15T15:28:54.191Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔹 RefreshToken 생성 요청 - 사용자: com.dolai.backend.user.model.User@1b59fb91
2025-05-15T15:28:54.191Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 JWT 생성 시작...
2025-05-15T15:28:54.191Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 사용자: com.dolai.backend.user.model.User@1b59fb91, 권한: [ROLE_USER]
2025-05-15T15:28:54.226Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.backend.oauth.service.TokenService   : 🆕 Redis에 새 토큰 저장: userId=109319850861871561813
2025-05-15T15:28:54.245Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.backend.oauth.service.TokenService   : ✅ [TokenService] 저장 완료: userId=109319850861871561813, refreshToken=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMDkzMTk4NTA4NjE4NzE1NjE4MTMiLCJyb2xlIjoiUk9MRV9VU0VSIiwiaWF0IjoxNzQ3MzIyOTM0LCJleHAiOjE3NDc5Mjc3MzR9.2F5yotDd299kQxE4mkHzx4yquX-AQ0TPLLdljGkjWgFPnGL5S4MqOzg1wLuSyiiOtg8SpPhcesAz7sr8JQZbUQ, accessToken=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMDkzMTk4NTA4NjE4NzE1NjE4MTMiLCJyb2xlIjoiUk9MRV9VU0VSIiwiaWF0IjoxNzQ3MzIyOTM0LCJleHAiOjE3NDc0MDkzMzR9.45puaKtuqsh3BHaoL-cVpvFqBHLukvY7_xq7jo9MIFFxsSgC3WjLzZWj4hzeEr6rkrlwzEuuCbMSByOFRa9Mcw
2025-05-15T15:28:54.279Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:54.283Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:54.288Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:28:54.292Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:54.295Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:54.300Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:28:54.302Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:54.304Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
Hibernate: select t1_0.id,t1_0.created_at,t1_0.due_date,t1_0.meeting_id,t1_0.status,t1_0.title,t1_0.updated_at,t1_0.user_id from todo t1_0 left join user u1_0 on u1_0.id=t1_0.user_id where u1_0.id=?
2025-05-15T15:28:54.310Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:28:54.321Z  INFO 46517 --- [backend] [.0-8081-exec-11] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:54.323Z  INFO 46517 --- [backend] [.0-8081-exec-11] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:54.328Z  INFO 46517 --- [backend] [.0-8081-exec-11] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select t1_0.id,t1_0.created_at,t1_0.due_date,t1_0.meeting_id,t1_0.status,t1_0.title,t1_0.updated_at,t1_0.user_id from todo t1_0 left join user u1_0 on u1_0.id=t1_0.user_id where u1_0.id=?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:28:58.768Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:58.770Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:58.776Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:28:58.779Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.d.b.meeting.service.MeetingService     : 초대 링크 생성 완료: https://13.209.37.189:3000/sfu/1747322938779_109319850861871561813
Hibernate: select m1_0.id,m1_0.created_at,m1_0.end_time,m1_0.host_user_id,m1_0.invite_url,m1_0.start_time,m1_0.status,m1_0.title,m1_0.updated_at,p1_0.meeting_id,p1_0.id,p1_0.created_at,p1_0.role,p1_0.updated_at,p1_0.user_id,u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from meeting m1_0 left join participants p1_0 on m1_0.id=p1_0.meeting_id left join user u1_0 on u1_0.id=p1_0.user_id where m1_0.id=?
Hibernate: insert into meeting (created_at,end_time,host_user_id,invite_url,start_time,status,title,updated_at,id) values (?,?,?,?,?,?,?,?,?)
2025-05-15T15:28:58.824Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.d.b.meeting.service.MeetingService     : 회의 생성 완료: com.dolai.backend.meeting.model.Meeting@33985b50
2025-05-15T15:28:58.846Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:58.848Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:58.852Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 left join meeting m1_0 on m1_0.id=s1_0.meeting_id where m1_0.id=? order by s1_0.timestamp
2025-05-15T15:28:58.913Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:58.917Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
2025-05-15T15:28:58.919Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:58.922Z  INFO 46517 --- [backend] [0.0-8081-exec-6] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:58.923Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:58.927Z  INFO 46517 --- [backend] [0.0-8081-exec-6] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
2025-05-15T15:28:58.928Z  INFO 46517 --- [backend] [0.0-8081-exec-9] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:28:58.932Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:58.942Z  INFO 46517 --- [backend] [0.0-8081-exec-6] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:28:58.952Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
Hibernate: select f1_0.id,f1_0.created_at,f1_0.receiver_id,f1_0.requester_id,f1_0.status,f1_0.updated_at from friends f1_0 join user r1_0 on r1_0.id=f1_0.requester_id join user r2_0 on r2_0.id=f1_0.receiver_id where f1_0.status=? and r1_0.id=? or f1_0.status=? and r2_0.id=?
2025-05-15T15:28:58.957Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:58.964Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:58.969Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
2025-05-15T15:28:58.970Z  INFO 46517 --- [backend] [0.0-8081-exec-5] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:58.980Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:58.982Z  INFO 46517 --- [backend] [0.0-8081-exec-1] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
2025-05-15T15:28:58.989Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:58.989Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:58.997Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
2025-05-15T15:28:59.000Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:59.009Z  INFO 46517 --- [backend] [0.0-8081-exec-8] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select f1_0.id,f1_0.created_at,f1_0.receiver_id,f1_0.requester_id,f1_0.status,f1_0.updated_at from friends f1_0 join user r1_0 on r1_0.id=f1_0.requester_id join user r2_0 on r2_0.id=f1_0.receiver_id where f1_0.status=? and r1_0.id=? or f1_0.status=? and r2_0.id=?
2025-05-15T15:28:59.029Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:28:59.032Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:28:59.038Z  INFO 46517 --- [backend] [0.0-8081-exec-2] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:29:36.001Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : ✅ 토큰 검증 결과: 유효함
2025-05-15T15:29:36.003Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.dolai.backend.oauth.jwt.TokenProvider  : 🔍 토큰에서 사용자 정보 추출 - ID: 109319850861871561813
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
2025-05-15T15:29:36.010Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.o.j.f.TokenAuthenticationFilter    : 🔍 TokenAuthenticationFilter Principal Type: com.dolai.backend.user.model.User
Hibernate: select m1_0.id,m1_0.created_at,m1_0.end_time,m1_0.host_user_id,m1_0.invite_url,m1_0.start_time,m1_0.status,m1_0.title,m1_0.updated_at from meeting m1_0 where m1_0.id=?
Hibernate: update meeting set created_at=?,end_time=?,host_user_id=?,invite_url=?,start_time=?,status=?,title=?,updated_at=? where id=?
2025-05-15T15:29:36.027Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.meeting.service.MeetingService     : ✅ 회의 종료 처리 완료: meetingId=56296c1a-7ca3-4026-9852-3b4a56a930c2, host=intothexx@gmail.com
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 left join meeting m1_0 on m1_0.id=s1_0.meeting_id where m1_0.id=? order by s1_0.timestamp
Hibernate: select p1_0.meeting_id,p1_0.id,p1_0.created_at,p1_0.role,p1_0.updated_at,p1_0.user_id,u1_0.id,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from participants p1_0 left join user u1_0 on u1_0.id=p1_0.user_id where p1_0.meeting_id=?
2025-05-15T15:29:36.876Z  INFO 46517 --- [backend] [0.0-8081-exec-7] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:29:36.876Z  INFO 46517 --- [backend] [0.0-8081-exec-7] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:29:36.876Z  INFO 46517 --- [backend] [0.0-8081-exec-7] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:29:36.878Z  INFO 46517 --- [backend] [0.0-8081-exec-7] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 5 ms
2025-05-15T15:29:36.878Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: 
2025-05-15T15:29:36.884Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:29:36.885Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:29:36.885Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: - 
2025-05-15T15:29:36.885Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:29:36.886Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:29:36.888Z  WARN 46517 --- [backend] [0.0-8081-exec-7] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
2025-05-15T15:29:37.195Z  INFO 46517 --- [backend] [0.0-8081-exec-7] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:29:37.195Z  INFO 46517 --- [backend] [0.0-8081-exec-7] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:29:37.195Z  INFO 46517 --- [backend] [0.0-8081-exec-7] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:29:37.196Z  INFO 46517 --- [backend] [0.0-8081-exec-7] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 4 ms
2025-05-15T15:29:37.196Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: 
2025-05-15T15:29:37.203Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:29:37.203Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:29:37.203Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: - 
2025-05-15T15:29:37.203Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:29:37.204Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:29:37.205Z  WARN 46517 --- [backend] [0.0-8081-exec-7] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
2025-05-15T15:29:37.223Z  INFO 46517 --- [backend] [0.0-8081-exec-7] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:29:37.223Z  INFO 46517 --- [backend] [0.0-8081-exec-7] o.d.o.contenttype.ContentTypeManager     : Detected WordProcessingML package 
2025-05-15T15:29:37.223Z  INFO 46517 --- [backend] [0.0-8081-exec-7] org.docx4j.openpackaging.io3.Load3       : Instantiated package of type org.docx4j.openpackaging.packages.WordprocessingMLPackage
2025-05-15T15:29:37.225Z  INFO 46517 --- [backend] [0.0-8081-exec-7] org.docx4j.openpackaging.io3.Load3       : package read;  elapsed time: 6 ms
2025-05-15T15:29:37.225Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 🔍 content 치환 시도. 내용: 
2025-05-15T15:29:37.237Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${content}' 발견됨
2025-05-15T15:29:37.238Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : ✅ content 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:29:37.238Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 🔍 result 치환 시도. 내용: -
2025-05-15T15:29:37.238Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : 📍 Paragraph 내에 '${result}' 발견됨
2025-05-15T15:29:37.238Z  INFO 46517 --- [backend] [0.0-8081-exec-7] c.d.b.d.service.MeetingDocGenerator      : ✅ result 셀에 문단 직접 삽입 완료 (역축적)
2025-05-15T15:29:37.240Z  WARN 46517 --- [backend] [0.0-8081-exec-7] o.d.jaxb.NamespacePrefixMapperUtils      : No mapping for prefix 'w16sdtfl'
Hibernate: select d1_0.id from directory d1_0 left join meeting m1_0 on m1_0.id=d1_0.meeting_id where m1_0.id=? and d1_0.parent_id is null and d1_0.name=? limit ?
Hibernate: insert into directory (created_at,meeting_id,name,parent_id,type,updated_at,user_id) values (?,?,?,?,?,?,?)
Hibernate: insert into documents (created_at,file_type,file_url,meeting_id,title,updated_at) values (?,?,?,?,?,?)
Hibernate: insert into meta_data (created_at,document_id,size,type,updated_at) values (?,?,?,?,?)
Hibernate: select null,u1_0.created_at,u1_0.email,u1_0.language,u1_0.name,u1_0.profile_image_url,u1_0.provider,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.id=?
Hibernate: insert into document_placements (directory_id,document_id,user_id) values (?,?,?)
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T15:53:06.153Z  INFO 46517 --- [backend] [MessageBroker-2] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(2)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 63], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 3, completed tasks = 1378]
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:18:18.204Z  INFO 46517 --- [backend] [xecutorLoop-1-1] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/127.0.0.1:6379
2025-05-15T16:18:18.223Z  WARN 46517 --- [backend] [llEventLoop-4-2] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost/<unresolved>:6379]: recvAddress(..) failed: Connection reset by peer

io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:18:19.376Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@c74c2e9 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.377Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@26a5f9e0 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.379Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@3b6966a9 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.380Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@11a088a7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.380Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@42c9f5aa (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.381Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@4baa6eea (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.382Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@3b861518 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.382Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@2ef6477f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.383Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@239f93ae (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:19.384Z  WARN 46517 --- [backend] [MessageBroker-2] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@3b5a6409 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-05-15T16:18:27.197Z  INFO 46517 --- [backend] [xecutorLoop-1-1] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/<unresolved>:6379
2025-05-15T16:18:28.219Z  INFO 46517 --- [backend] [llEventLoop-4-2] i.l.core.protocol.ReconnectionHandler    : Reconnected to localhost/<unresolved>:6379
2025-05-15T16:18:44.795Z  INFO 46517 --- [backend] [xecutorLoop-1-2] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/127.0.0.1:6379
2025-05-15T16:18:44.799Z  WARN 46517 --- [backend] [llEventLoop-4-1] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost/<unresolved>:6379]: Connection closed prematurely

io.lettuce.core.RedisConnectionException: Connection closed prematurely
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:91) ~[lettuce-core-6.3.2.RELEASE.jar!/:6.3.2.RELEASE/8941aea]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69) ~[lettuce-core-6.3.2.RELEASE.jar!/:6.3.2.RELEASE/8941aea]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813) ~[netty-transport-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173) ~[netty-common-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166) ~[netty-common-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470) ~[netty-common-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:413) ~[netty-transport-classes-epoll-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.107.Final.jar!/:4.1.107.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.107.Final.jar!/:4.1.107.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-05-15T16:18:49.369Z  WARN 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 0, SQLState: 08S01
2025-05-15T16:18:49.369Z ERROR 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : HikariPool-1 - Connection is not available, request timed out after 30000ms.
2025-05-15T16:18:49.369Z ERROR 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2025-05-15T16:18:49.379Z ERROR 46517 --- [backend] [MessageBroker-2] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection [HikariPool-1 - Connection is not available, request timed out after 30000ms.] [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:274) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection [HikariPool-1 - Connection is not available, request timed out after 30000ms.] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:51) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:116) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:143) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:54) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:153) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:183) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:155) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.lambda$list$0(JdbcSelectExecutor.java:85) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:231) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30000ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:696) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:181) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:146) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:46) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:113) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 65 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:733) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:712) ~[HikariCP-5.0.1.jar!/:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	... 3 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[na:na]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:582) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.NativeProtocol.readServerCapabilities(NativeProtocol.java:537) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.NativeProtocol.beforeHandshake(NativeProtocol.java:425) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1426) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:133) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	... 13 common frames omitted
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:67) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:576) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	... 19 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:18:53.796Z  INFO 46517 --- [backend] [xecutorLoop-1-2] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/<unresolved>:6379
2025-05-15T16:18:53.797Z  WARN 46517 --- [backend] [llEventLoop-4-1] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost/<unresolved>:6379]: finishConnect(..) failed: Connection refused: localhost/127.0.0.1:6379
2025-05-15T16:19:01.996Z  INFO 46517 --- [backend] [xecutorLoop-1-1] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/<unresolved>:6379
2025-05-15T16:19:02.002Z  WARN 46517 --- [backend] [llEventLoop-4-2] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost/<unresolved>:6379]: finishConnect(..) failed: Connection refused: localhost/127.0.0.1:6379
2025-05-15T16:19:18.396Z  INFO 46517 --- [backend] [xecutorLoop-1-2] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/<unresolved>:6379
2025-05-15T16:19:18.397Z  WARN 46517 --- [backend] [llEventLoop-4-1] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost/<unresolved>:6379]: finishConnect(..) failed: Connection refused: localhost/127.0.0.1:6379
2025-05-15T16:19:22.383Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 0, SQLState: 08S01
2025-05-15T16:19:22.383Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : HikariPool-1 - Connection is not available, request timed out after 30000ms.
2025-05-15T16:19:22.383Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2025-05-15T16:19:22.384Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection [HikariPool-1 - Connection is not available, request timed out after 30000ms.] [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:274) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection [HikariPool-1 - Connection is not available, request timed out after 30000ms.] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:51) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:116) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:143) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:54) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:153) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:183) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:155) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.lambda$list$0(JdbcSelectExecutor.java:85) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:231) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30000ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:696) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:181) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:146) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:46) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:113) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 65 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:733) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:712) ~[HikariCP-5.0.1.jar!/:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	... 3 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[na:na]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	... 13 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:751) ~[na:na]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	... 16 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:19:44.708Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:19:44.708Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:19:44.713Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:19:47.717Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:19:47.718Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:19:47.718Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

2025-05-15T16:19:48.496Z  INFO 46517 --- [backend] [xecutorLoop-1-2] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/<unresolved>:6379
2025-05-15T16:19:48.499Z  INFO 46517 --- [backend] [llEventLoop-4-2] i.l.core.protocol.ReconnectionHandler    : Reconnected to localhost/<unresolved>:6379
Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:19:50.722Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:19:50.723Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:19:50.723Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:19:53.727Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:19:53.728Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:19:53.728Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:19:56.731Z  WARN 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:19:56.732Z ERROR 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:19:56.732Z ERROR 46517 --- [backend] [MessageBroker-2] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:19:59.735Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:19:59.735Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:19:59.736Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:02.739Z  WARN 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:02.739Z ERROR 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:02.740Z ERROR 46517 --- [backend] [MessageBroker-2] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:05.744Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:05.744Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:05.744Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:08.748Z  WARN 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:08.748Z ERROR 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:08.749Z ERROR 46517 --- [backend] [MessageBroker-2] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:11.752Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:11.752Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:11.753Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:14.756Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:14.756Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:14.756Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:17.760Z  WARN 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:17.760Z ERROR 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:17.760Z ERROR 46517 --- [backend] [MessageBroker-2] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:20.763Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:20.764Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:20.764Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:23.767Z  WARN 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:23.767Z ERROR 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:23.768Z ERROR 46517 --- [backend] [MessageBroker-2] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:26.771Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:26.771Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:26.772Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:29.775Z  WARN 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:29.775Z ERROR 46517 --- [backend] [MessageBroker-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:29.775Z ERROR 46517 --- [backend] [MessageBroker-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

Hibernate: select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?
2025-05-15T16:20:32.778Z  WARN 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2025-05-15T16:20:32.779Z ERROR 46517 --- [backend] [MessageBroker-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'dolai.stt_logs' doesn't exist
2025-05-15T16:20:32.779Z ERROR 46517 --- [backend] [MessageBroker-2] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy179.findTop10BySyncedFalseOrderByTimestampAsc(Unknown Source) ~[na:na]
	at com.dolai.backend.stt_log.service.STTLogSyncService.syncToArango(STTLogSyncService.java:24) ~[!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at io.micrometer.observation.Observation.observe(Observation.java:499) ~[micrometer-observation-1.12.4.jar!/:1.12.4]
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124) ~[spring-context-6.1.5.jar!/:6.1.5]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-6.1.5.jar!/:6.1.5]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select s1_0.id,s1_0.meeting_id,s1_0.speaker_name,s1_0.synced,s1_0.text,s1_0.text_en,s1_0.text_ko,s1_0.text_zh,s1_0.timestamp from stt_logs s1_0 where not(s1_0.synced) order by s1_0.timestamp limit ?] [Table 'dolai.stt_logs' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415) ~[spring-orm-6.1.5.jar!/:6.1.5]
	at jdk.proxy2/jdk.proxy2.$Proxy230.getResultList(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137) ~[spring-data-jpa-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.4.jar!/:3.2.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.5.jar!/:6.1.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.5.jar!/:6.1.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.5.jar!/:6.1.5]
	... 21 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'dolai.stt_logs' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar!/:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.0.1.jar!/:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.0.1.jar!/:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.4.Final.jar!/:6.4.4.Final]
	... 58 common frames omitted

